title: "[pallet-revive] Ethereum JSON-RPC integration"

doc:
  - audience: Runtime Dev
    description: |
      Related PR: https://github.com/paritytech/revive-ethereum-rpc/pull/5

      Changes Included:
      -  A new pallet::call  eth_transact.
      - A custom UncheckedExtrinsic struct to dispatch unsigned eth_transact calls from an Ethereum JSON-RPC proxy.
      - Generated types and traits to support implementing a JSON-RPC Ethereum proxy.

      Flow Overview:
      - A user submits a transaction via MetaMask or another Ethereum-compatible wallet.
      - The proxy dry run the transaction and add metadata to the call ( gas limit in Weight, Storage deposit limit, bytecode and constructor length for contract instantiation)
      - The raw transaction, along with the additional metadata, is submitted to the node as an unsigned extrinsic.
      -  On the node, the custom UncheckedExtrinsic struct has a custom Checkable implementation that converts the unsigned extrinsics into checked ones
      - It recovers the signer
      -  validates the payload,  and injects default signed extensions, allowing the system to increment the nonce and charge the appropriate fees.
      -  re-route the call to pallet-revive::Call::call or pallet-revive::Call::instantiateWithCode
crates:
  - name: pallet-revive
    bump: patch
  - name: polkadot-sdk
    bump: patch

