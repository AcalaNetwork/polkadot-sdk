With general transactions, we can have different version of the transaction extension pipeline. Currently only `0` is used. This PR allows to define other versions.

I added a new generic to `UncheckedExtrinsic`: `ExtensionOtherVersions = InvalidVersions`. By default this generic is bound to "no other versions", so less breaking change.

The type needs to keep some definition for the pipeline for signed transactions and also for inherent extrinsics. For this reason I decided to introduce a new generic to allow to define only other versions.

### Additional notes

It is still a breaking change because type inference don't assume generic being the default one. So usage like `UncheckedExtrinsic::from_parts(...)` may need to be rewritten to `UncheckedExtrinsic::<_, _, _, _>::from_parts(...)`.

Otherwise we can introduce a new type `UncheckedExtrinsicV2` and make `type UncheckedExtrinsic<A, B, C, D> = UncheckedExtrincV2<A, B, C, D, InvalidVersions>`.

If the new type is not a good design we can also just reimplement the logic to a new type. We don't have to force enhancing the current type.

// TODO TODO: usage, examples, doc, tests
