[package]
name = "cumulus-pallet-aura-ext"
version = "0.14.0"
authors.workspace = true
edition.workspace = true
description = "AURA consensus extension pallet for parachains (polkadot v1.13.0)"
license = "Apache-2.0"

[lints]
workspace = true

[dependencies]
codec = { package = "parity-scale-codec", version = "3.6.12", default-features = false, features = ["derive"] }
scale-info = { version = "2.11.1", default-features = false, features = ["derive"] }

# Substrate
frame-support = { path = "../../../substrate/frame/support", default-features = false, version = "35.0.0" }
frame-system = { path = "../../../substrate/frame/system", default-features = false, version = "35.0.0" }
pallet-aura = { path = "../../../substrate/frame/aura", default-features = false, version = "34.0.0" }
pallet-timestamp = { path = "../../../substrate/frame/timestamp", default-features = false, version = "34.0.0" }
sp-application-crypto = { path = "../../../substrate/primitives/application-crypto", default-features = false, version = "37.0.0" }
sp-consensus-aura = { path = "../../../substrate/primitives/consensus/aura", default-features = false, version = "0.39.0" }
sp-runtime = { path = "../../../substrate/primitives/runtime", default-features = false, version = "38.0.0" }
sp-std = { path = "../../../substrate/primitives/std", default-features = false, version = "14.0.0" }

# Cumulus
cumulus-pallet-parachain-system = { path = "../parachain-system", default-features = false, version = "0.14.0" }

[dev-dependencies]
cumulus-pallet-parachain-system = { path = "../parachain-system" }

[features]
default = ["std"]
std = [
	"codec/std",
	"cumulus-pallet-parachain-system/std",
	"frame-support/std",
	"frame-system/std",
	"pallet-aura/std",
	"pallet-timestamp/std",
	"scale-info/std",
	"sp-application-crypto/std",
	"sp-consensus-aura/std",
	"sp-runtime/std",
	"sp-std/std",
]
try-runtime = [
	"cumulus-pallet-parachain-system/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-timestamp/try-runtime",
	"sp-runtime/try-runtime",
]
