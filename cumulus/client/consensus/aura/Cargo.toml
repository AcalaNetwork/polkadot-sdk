[package]
name = "cumulus-client-consensus-aura"
description = "AURA consensus algorithm for parachains"
version = "0.7.0"
authors.workspace = true
edition.workspace = true
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"

[lints]
workspace = true

[dependencies]
async-trait = { workspace = true }
codec = { features = ["derive"], workspace = true, default-features = true }
futures = { workspace = true }
parking_lot = { workspace = true }
tracing = { workspace = true, default-features = true }
schnellru = { workspace = true }
tokio = { workspace = true, features = ["macros"] }

# Substrate
sc-client-api = { workspace = true, default-features = true }
sc-consensus = { workspace = true, default-features = true }
sc-consensus-aura = { workspace = true, default-features = true }
sc-consensus-babe = { workspace = true, default-features = true }
sc-consensus-slots = { workspace = true, default-features = true }
sc-utils = { workspace = true, default-features = true }
sc-telemetry = { workspace = true, default-features = true }
sp-api = { workspace = true, default-features = true }
sp-application-crypto = { workspace = true, default-features = true }
sp-block-builder = { workspace = true, default-features = true }
sp-blockchain = { workspace = true, default-features = true }
sp-consensus = { workspace = true, default-features = true }
sp-consensus-aura = { workspace = true, default-features = true }
sp-core = { workspace = true, default-features = true }
sp-inherents = { workspace = true, default-features = true }
sp-keystore = { workspace = true, default-features = true }
sp-runtime = { workspace = true, default-features = true }
sp-timestamp = { workspace = true, default-features = true }
sp-state-machine = { workspace = true, default-features = true }
prometheus-endpoint = { workspace = true, default-features = true }

# Cumulus
cumulus-client-consensus-common = { workspace = true, default-features = true }
cumulus-relay-chain-interface = { workspace = true, default-features = true }
cumulus-client-consensus-proposer = { workspace = true, default-features = true }
cumulus-client-parachain-inherent = { workspace = true, default-features = true }
cumulus-primitives-aura = { workspace = true, default-features = true }
cumulus-primitives-core = { workspace = true, default-features = true }
cumulus-client-collator = { workspace = true, default-features = true }

# Polkadot
polkadot-primitives = { workspace = true, default-features = true }
polkadot-node-primitives = { workspace = true, default-features = true }
polkadot-node-subsystem = { workspace = true, default-features = true }
polkadot-overseer = { workspace = true, default-features = true }

[features]
try-runtime = [
	"cumulus-client-collator/try-runtime",
	"cumulus-client-consensus-common/try-runtime",
	"cumulus-client-consensus-proposer/try-runtime",
	"cumulus-client-parachain-inherent/try-runtime",
	"cumulus-primitives-aura/try-runtime",
	"cumulus-primitives-core/try-runtime",
	"polkadot-node-primitives/try-runtime",
	"polkadot-primitives/try-runtime",
	"sc-client-api/try-runtime",
	"sc-consensus-aura/try-runtime",
	"sc-consensus-babe/try-runtime",
	"sc-consensus/try-runtime",
	"sc-consensus-slots/try-runtime",
	"sp-api/try-runtime",
	"sp-block-builder/try-runtime",
	"sp-blockchain/try-runtime",
	"sp-consensus-aura/try-runtime",
	"sp-consensus/try-runtime",
	"sp-inherents/try-runtime",
	"sp-runtime/try-runtime",
	"sp-state-machine/try-runtime",
	"sp-timestamp/try-runtime",
	"cumulus-relay-chain-interface/try-runtime",
	"polkadot-overseer/try-runtime",
	"polkadot-node-subsystem/try-runtime",
	"sc-telemetry/try-runtime",
	"sp-application-crypto/try-runtime",
	"sp-core/try-runtime",
	"sp-keystore/try-runtime"
]
runtime-benchmarks = [
	"cumulus-client-collator/runtime-benchmarks",
	"cumulus-client-consensus-common/runtime-benchmarks",
	"cumulus-client-consensus-proposer/runtime-benchmarks",
	"cumulus-client-parachain-inherent/runtime-benchmarks",
	"cumulus-relay-chain-interface/runtime-benchmarks",
	"cumulus-primitives-aura/runtime-benchmarks",
	"cumulus-primitives-core/runtime-benchmarks",
	"polkadot-overseer/runtime-benchmarks",
	"polkadot-node-primitives/runtime-benchmarks",
	"polkadot-primitives/runtime-benchmarks",
	"sc-client-api/runtime-benchmarks",
	"sc-consensus-aura/runtime-benchmarks",
	"sc-consensus-babe/runtime-benchmarks",
	"sc-consensus/runtime-benchmarks",
	"sc-consensus-slots/runtime-benchmarks",
	"sp-api/runtime-benchmarks",
	"sp-block-builder/runtime-benchmarks",
	"sp-blockchain/runtime-benchmarks",
	"sp-consensus-aura/runtime-benchmarks",
	"sp-consensus/runtime-benchmarks",
	"sp-inherents/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"sp-state-machine/runtime-benchmarks",
	"sp-timestamp/runtime-benchmarks",
	"polkadot-node-subsystem/runtime-benchmarks",
	"sc-telemetry/runtime-benchmarks",
	"sp-application-crypto/runtime-benchmarks",
	"sp-core/runtime-benchmarks",
	"sp-keystore/runtime-benchmarks"
]
std = [
	"cumulus-client-collator/std",
	"cumulus-client-consensus-common/std",
	"cumulus-client-consensus-proposer/std",
	"cumulus-client-parachain-inherent/std",
	"cumulus-relay-chain-interface/std",
	"polkadot-overseer/std",
	"polkadot-node-primitives/std",
	"sc-client-api/std",
	"sc-consensus-aura/std",
	"sc-consensus-babe/std",
	"sc-consensus/std",
	"sc-consensus-slots/std",
	"sc-telemetry/std",
	"sc-utils/std",
	"sp-blockchain/std",
	"sp-consensus/std",
	"prometheus-endpoint/std",
	"polkadot-node-subsystem/std"
]
