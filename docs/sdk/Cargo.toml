[package]
name = "polkadot-sdk-docs"
description = "The one stop shop for developers of the polkadot-sdk"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
homepage = "paritytech.github.io"
repository.workspace = true
authors.workspace = true
edition.workspace = true
# This crate is not publish-able to crates.io for now because of docify.
publish = false
version = "0.0.1"

[lints]
workspace = true

[dependencies]
# Needed for all FRAME-based code
codec = { workspace = true }
scale-info = { workspace = true }
frame = { features = [
	"experimental",
	"runtime",
], workspace = true, default-features = true }
pallet-examples = { workspace = true }
pallet-default-config-example = { workspace = true, default-features = true }
pallet-example-offchain-worker = { workspace = true, default-features = true }

# How we build docs in rust-docs
simple-mermaid = "0.1.1"
docify = { workspace = true }

# Polkadot SDK deps, typically all should only be in scope such that we can link to their doc item.
polkadot-sdk = { features = ["runtime"], workspace = true, default-features = true }
node-cli = { workspace = true }
kitchensink-runtime = { workspace = true }
chain-spec-builder = { workspace = true, default-features = true }
subkey = { workspace = true, default-features = true }
frame-system = { workspace = true }
frame-support = { workspace = true }
frame-executive = { workspace = true }
pallet-example-single-block-migrations = { workspace = true, default-features = true }
frame-metadata-hash-extension = { workspace = true, default-features = true }
log = { workspace = true, default-features = true }

# Substrate Client
sc-network = { workspace = true, default-features = true }
sc-rpc-api = { workspace = true, default-features = true }
sc-rpc = { workspace = true, default-features = true }
sc-client-db = { workspace = true, default-features = true }
sc-cli = { workspace = true, default-features = true }
sc-consensus-aura = { workspace = true, default-features = true }
sc-consensus-babe = { workspace = true, default-features = true }
sc-consensus-grandpa = { workspace = true, default-features = true }
sc-consensus-beefy = { workspace = true, default-features = true }
sc-consensus-manual-seal = { workspace = true, default-features = true }
sc-consensus-pow = { workspace = true, default-features = true }
sc-executor = { workspace = true, default-features = true }
sc-service = { workspace = true, default-features = true }
sc-chain-spec = { workspace = true, default-features = true }

substrate-wasm-builder = { workspace = true, default-features = true }

# Cumulus
cumulus-pallet-aura-ext = { workspace = true, default-features = true }
cumulus-pallet-parachain-system = { workspace = true, default-features = true }
parachain-info = { workspace = true, default-features = true }
cumulus-primitives-proof-size-hostfunction = { workspace = true, default-features = true }
cumulus-client-service = { workspace = true, default-features = true }
cumulus-primitives-storage-weight-reclaim = { workspace = true, default-features = true }

# Pallets and FRAME internals
pallet-aura = { workspace = true, default-features = true }
pallet-timestamp = { workspace = true, default-features = true }
pallet-balances = { workspace = true, default-features = true }
pallet-assets = { workspace = true, default-features = true }
pallet-preimage = { workspace = true, default-features = true }
pallet-transaction-payment = { workspace = true, default-features = true }
pallet-asset-tx-payment = { workspace = true, default-features = true }
pallet-skip-feeless-payment = { workspace = true, default-features = true }
pallet-asset-conversion-tx-payment = { workspace = true, default-features = true }
pallet-utility = { workspace = true, default-features = true }
pallet-multisig = { workspace = true, default-features = true }
pallet-proxy = { workspace = true, default-features = true }
pallet-authorship = { workspace = true, default-features = true }
pallet-collective = { workspace = true, default-features = true }
pallet-democracy = { workspace = true, default-features = true }
pallet-uniques = { workspace = true, default-features = true }
pallet-nfts = { workspace = true, default-features = true }
pallet-scheduler = { workspace = true, default-features = true }
pallet-referenda = { workspace = true, default-features = true }
pallet-broker = { workspace = true, default-features = true }
pallet-babe = { workspace = true, default-features = true }

# Primitives
sp-io = { workspace = true, default-features = true }
sp-std = { workspace = true, default-features = true }
sp-tracing = { workspace = true, default-features = true }
sp-runtime-interface = { workspace = true, default-features = true }
sp-api = { workspace = true, default-features = true }
sp-core = { workspace = true, default-features = true }
sp-keyring = { workspace = true, default-features = true }
sp-runtime = { workspace = true, default-features = true }
sp-arithmetic = { workspace = true, default-features = true }
sp-genesis-builder = { workspace = true, default-features = true }
sp-offchain = { workspace = true, default-features = true }
sp-version = { workspace = true, default-features = true }


# XCM
xcm = { workspace = true, default-features = true }
xcm-builder = { workspace = true }
xcm-docs = { workspace = true }
xcm-executor = { workspace = true }
xcm-simulator = { workspace = true }
pallet-xcm = { workspace = true }

# runtime guides
chain-spec-guide-runtime = { workspace = true }

# Templates
minimal-template-runtime = { workspace = true }
solochain-template-runtime = { workspace = true }
parachain-template-runtime = { workspace = true }

[features]
try-runtime = [
	"cumulus-client-service/try-runtime",
	"cumulus-pallet-aura-ext/try-runtime",
	"cumulus-pallet-parachain-system/try-runtime",
	"parachain-info/try-runtime",
	"cumulus-primitives-storage-weight-reclaim/try-runtime",
	"chain-spec-guide-runtime/try-runtime",
	"xcm/try-runtime",
	"xcm-docs/try-runtime",
	"pallet-xcm/try-runtime",
	"xcm-builder/try-runtime",
	"xcm-executor/try-runtime",
	"xcm-simulator/try-runtime",
	"node-cli/try-runtime",
	"kitchensink-runtime/try-runtime",
	"sc-chain-spec/try-runtime",
	"sc-cli/try-runtime",
	"sc-consensus-aura/try-runtime",
	"sc-consensus-babe/try-runtime",
	"sc-consensus-beefy/try-runtime",
	"sc-consensus-grandpa/try-runtime",
	"sc-consensus-manual-seal/try-runtime",
	"sc-consensus-pow/try-runtime",
	"sc-client-db/try-runtime",
	"sc-executor/try-runtime",
	"sc-network/try-runtime",
	"sc-rpc/try-runtime",
	"sc-rpc-api/try-runtime",
	"sc-service/try-runtime",
	"frame/try-runtime",
	"pallet-assets/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-babe/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-broker/try-runtime",
	"pallet-collective/try-runtime",
	"pallet-democracy/try-runtime",
	"pallet-examples/try-runtime",
	"pallet-default-config-example/try-runtime",
	"pallet-example-offchain-worker/try-runtime",
	"pallet-example-single-block-migrations/try-runtime",
	"frame-executive/try-runtime",
	"frame-metadata-hash-extension/try-runtime",
	"pallet-multisig/try-runtime",
	"pallet-nfts/try-runtime",
	"pallet-preimage/try-runtime",
	"pallet-proxy/try-runtime",
	"pallet-referenda/try-runtime",
	"pallet-scheduler/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-asset-conversion-tx-payment/try-runtime",
	"pallet-asset-tx-payment/try-runtime",
	"pallet-skip-feeless-payment/try-runtime",
	"pallet-uniques/try-runtime",
	"pallet-utility/try-runtime",
	"sp-api/try-runtime",
	"sp-genesis-builder/try-runtime",
	"sp-keyring/try-runtime",
	"sp-offchain/try-runtime",
	"sp-runtime/try-runtime",
	"sp-version/try-runtime",
	"minimal-template-runtime/try-runtime",
	"parachain-template-runtime/try-runtime",
	"solochain-template-runtime/try-runtime",
	"polkadot-sdk/try-runtime",
	"cumulus-primitives-proof-size-hostfunction/try-runtime",
	"chain-spec-builder/try-runtime",
	"subkey/try-runtime",
	"sp-io/try-runtime",
	"sp-runtime-interface/try-runtime",
	"substrate-wasm-builder/try-runtime",
	"sp-core/try-runtime"
]
runtime-benchmarks = [
	"cumulus-client-service/runtime-benchmarks",
	"cumulus-pallet-aura-ext/runtime-benchmarks",
	"cumulus-pallet-parachain-system/runtime-benchmarks",
	"parachain-info/runtime-benchmarks",
	"cumulus-primitives-storage-weight-reclaim/runtime-benchmarks",
	"chain-spec-guide-runtime/runtime-benchmarks",
	"xcm/runtime-benchmarks",
	"xcm-docs/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"xcm-builder/runtime-benchmarks",
	"xcm-executor/runtime-benchmarks",
	"xcm-simulator/runtime-benchmarks",
	"node-cli/runtime-benchmarks",
	"kitchensink-runtime/runtime-benchmarks",
	"sc-chain-spec/runtime-benchmarks",
	"sc-cli/runtime-benchmarks",
	"sc-consensus-aura/runtime-benchmarks",
	"sc-consensus-babe/runtime-benchmarks",
	"sc-consensus-beefy/runtime-benchmarks",
	"sc-consensus-grandpa/runtime-benchmarks",
	"sc-consensus-manual-seal/runtime-benchmarks",
	"sc-consensus-pow/runtime-benchmarks",
	"sc-client-db/runtime-benchmarks",
	"sc-executor/runtime-benchmarks",
	"sc-network/runtime-benchmarks",
	"sc-rpc/runtime-benchmarks",
	"sc-rpc-api/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"frame/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"pallet-aura/runtime-benchmarks",
	"pallet-authorship/runtime-benchmarks",
	"pallet-babe/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-broker/runtime-benchmarks",
	"pallet-collective/runtime-benchmarks",
	"pallet-democracy/runtime-benchmarks",
	"pallet-examples/runtime-benchmarks",
	"pallet-default-config-example/runtime-benchmarks",
	"pallet-example-offchain-worker/runtime-benchmarks",
	"pallet-example-single-block-migrations/runtime-benchmarks",
	"frame-executive/runtime-benchmarks",
	"frame-metadata-hash-extension/runtime-benchmarks",
	"pallet-multisig/runtime-benchmarks",
	"pallet-nfts/runtime-benchmarks",
	"pallet-preimage/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"pallet-referenda/runtime-benchmarks",
	"pallet-scheduler/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-transaction-payment/runtime-benchmarks",
	"pallet-asset-conversion-tx-payment/runtime-benchmarks",
	"pallet-asset-tx-payment/runtime-benchmarks",
	"pallet-skip-feeless-payment/runtime-benchmarks",
	"pallet-uniques/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"sp-api/runtime-benchmarks",
	"sp-genesis-builder/runtime-benchmarks",
	"sp-keyring/runtime-benchmarks",
	"sp-offchain/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"sp-version/runtime-benchmarks",
	"minimal-template-runtime/runtime-benchmarks",
	"parachain-template-runtime/runtime-benchmarks",
	"solochain-template-runtime/runtime-benchmarks",
	"polkadot-sdk/runtime-benchmarks",
	"cumulus-primitives-proof-size-hostfunction/runtime-benchmarks",
	"chain-spec-builder/runtime-benchmarks",
	"subkey/runtime-benchmarks",
	"sp-io/runtime-benchmarks",
	"sp-runtime-interface/runtime-benchmarks",
	"substrate-wasm-builder/runtime-benchmarks",
	"sp-core/runtime-benchmarks"
]
std = [
	"cumulus-client-service/std",
	"xcm-docs/std",
	"pallet-xcm/std",
	"xcm-builder/std",
	"xcm-executor/std",
	"xcm-simulator/std",
	"node-cli/std",
	"chain-spec-builder/std",
	"subkey/std",
	"sc-chain-spec/std",
	"sc-cli/std",
	"sc-consensus-aura/std",
	"sc-consensus-babe/std",
	"sc-consensus-beefy/std",
	"sc-consensus-grandpa/std",
	"sc-consensus-manual-seal/std",
	"sc-consensus-pow/std",
	"sc-client-db/std",
	"sc-network/std",
	"sc-rpc/std",
	"sc-rpc-api/std",
	"sc-service/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system/std",
	"substrate-wasm-builder/std",
	"log/std",
	"codec/std",
	"scale-info/std"
]
