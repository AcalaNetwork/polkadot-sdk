name: "Zombienet-sdk test"
description: "Runs zombienet-sdk tests with archived artifacts"
inputs:
  build-id:
    description: ""
    required: true
  ref-slug:
    description: "Ref slug (e.g branch-name-short)"
    required: true
  test:
    description: "test filter to pass to nextest (e.g: functional::spam_statement_distribution_requests::spam_statement_distribution_requests_test)"
    required: true
  prefix:
    description: "Archive prefix for tests files (e.g polkadot, cumulus or substrate)"
    required: true
  gh-token:
    description: "GITHUB_TOKEN to use for downloading artifacts"
    required: true
  parachain-artifact:
    description: "Name of the parachain artifact to download (optional)"
    required: false
    default: ""
  parachain-files:
    description: "Comma-separated list of files to copy from the parachain artifact (optional)"
    required: false
    default: ""
  parachain-destination:
    description: "Destination path for parachain files (optional)"
    required: false
    default: "./artifacts"



runs:
  using: "composite"
  steps:
    - name: k8s_auth
      shell: bash
      run: |
        . /home/nonroot/zombie-net/scripts/ci/run-test-local-env-manager.sh
        k8s_auth

    - name: common_vars
      shell: bash
      env:
        TEST_NAME: ${{ inputs.test }}
        PREFIX: ${{ inputs.prefix }}
      run: |
        echo "Vars"
        echo "ZOMBIENET_INTEGRATION_TEST_IMAGE: $ZOMBIENET_INTEGRATION_TEST_IMAGE"
        echo "COL_IMAGE: $COL_IMAGE"
        echo "POLKADOT_IMAGE: $POLKADOT_IMAGE"
        echo "MALUS_IMAGE: $MALUS_IMAGE"
        echo "RUN_IN_CI: $RUN_IN_CI"
        echo "Inputs"
        echo "test: $TEST_NAME"
        echo "prefix: $PREFIX"

    - uses: ./.github/actions/download-artifact-extract
      with:
        artifact-name: build-linux-stable-${{ inputs.ref-slug }}
        gh-token: ${{ inputs.gh-token }}
        run-id: ${{ inputs.build-id }}
        extract-path: ./tmp
        files-to-copy:
          - artifacts/polkadot
          - artifacts/polkadot-execute-worker
          - artifacts/polkadot-prepare-worker
        destination-path: ./bin
        cleanup: "true"


    - uses: ./.github/actions/download-artifact-extract
      with:
        artifact-name: build-linux-stable-cumulus-${{ inputs.ref-slug }}
        gh-token: ${{ inputs.gh-token }}
        run-id: ${{ inputs.build-id }}
        extract-path: ./tmp
        files-to-copy:
          - artifacts/polkadot-parachain
        destination-path: ./bin
        cleanup: "true"

    - uses: ./.github/actions/download-artifact-extract
      with:
        artifact-name: build-test-parachain-${{ inputs.ref-slug }}
        gh-token: ${{ inputs.gh-token }}
        run-id: ${{ inputs.build-id }}
        extract-path: ./tmp
        files-to-copy:
          - artifacts/test-parachain
        destination-path: ./bin
        cleanup: "true"

    - uses: ./.github/actions/download-artifact-extract
      with:
        artifact-name: build-test-collators-${{ inputs.ref-slug }}
        gh-token: ${{ inputs.gh-token }}
        run-id: ${{ inputs.build-id }}
        extract-path: ./tmp
        files-to-copy:
          - artifacts/adder-collator
          - artifacts/undying-collator
        destination-path: ./bin
        cleanup: "true"

    - uses: ./.github/actions/download-artifact-extract
      with:
        artifact-name: build-malus-${{ inputs.ref-slug }}
        gh-token: ${{ inputs.gh-token }}
        run-id: ${{ inputs.build-id }}
        extract-path: ./tmp
        files-to-copy:
        # TODO: should copy polkadot-execute-worker and polkadot-prepare-worker?
        # if yes then it overlaps with build-linux-stable - address this
          - artifacts/malus
        destination-path: ./bin
        cleanup: "true"

    - uses: ./.github/actions/download-artifact-extract
      with:
        artifact-name: prepare-${{ inputs.prefix }}-zombienet-artifacts-${{ inputs.ref-slug }}
        gh-token: ${{ inputs.gh-token }}
        run-id: ${{ inputs.build-id }}

    - name: zombie_test
      shell: bash
      env:
        # zombienet-sdk expects RUN_IN_CI to be set when running in CI
        RUN_IN_CI: 1
        TEST_NAME: ${{ inputs.test }}
        PREFIX: ${{ inputs.prefix }}
      run: |
          export PATH=$(pwd)/bin:$PATH
          chmod +x $(pwd)/bin/*

          ls -ltr ./artifacts
          cargo nextest run --archive-file ./artifacts/${PREFIX}-zombienet-tests.tar.zst --no-capture -- ${TEST_NAME}

    - name: upload_logs
      uses: actions/upload-artifact@v4
      if: ${{ ! cancelled() }}
      with:
        name: zombienet-logs-${{ github.job }}-${{ github.sha }}
        path: |
          /tmp/zombie*/logs/*

