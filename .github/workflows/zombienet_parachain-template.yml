name: Zombienet Parachain Templates

on:
  workflow_dispatch: # Disabled for being flaky
  #push:
  #  branches:
  #    - master
  pull_request:
   types: [opened, synchronize, reopened, ready_for_review, labeled]
  #merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  FF_DISABLE_UMASK_FOR_DOCKER_EXECUTOR: 1
  GHA_CLUSTER_SERVER_ADDR: "https://kubernetes.default:443"
  # use spot by default
  X_INFRA_INSTANCE: "spot"
  # don't retry sdk tests
  NEXTEST_RETRIES: 0
  ZOMBIE_PROVIDER: "native"
  RUST_LOG: "info,zombienet_orchestrator=debug"

# only run if we have changes in [subtrate, polkadot] directories or this workflow.
jobs:
  isdraft:
    uses: ./.github/workflows/reusable-isdraft.yml
  preflight:
    needs: isdraft
    if: false
    uses: ./.github/workflows/zombienet-reusable-preflight.yml


  zombienet-parachain-template-smoke:
    needs: [preflight]
    if: ${{ (needs.preflight.outputs.changes_substrate || needs.preflight.outputs.changes_polkadot) &&  ! contains(needs.preflight.outputs.FLAKY_TESTS, 'zombienet-parachain-template-smoke') }}
    runs-on: parity-default
    timeout-minutes: 30
    container:
      image: ${{ needs.preflight.outputs.CI_IMAGE }}
    env:
      ZOMBIE_PROVIDER: "native"
      RUST_LOG: "info,zombienet_orchestrator=debug"
      FF_DISABLE_UMASK_FOR_DOCKER_EXECUTOR: 1
      RUN_IN_CONTAINER: "1"
      IMAGE: ${{ needs.preflight.outputs.CI_IMAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: zombienet_test
        uses: ./.github/actions/zombienet-sdk
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          build-id: ${{ needs.preflight.outputs.BUILD_RUN_ID }}
          ref-slug: ${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
          # This pattern shall cover:
          # - minimal_template_block_production_test
          # - parachain_template_block_production_test
          # - solochain_template_block_production_test
          test: "template"
          prefix: "parachain-templates"
