[package]
name = "polkadot-node-metrics"
description = "Subsystem metric helpers (polkadot v1.12.0)"
version = "13.0.0"
authors.workspace = true
edition.workspace = true
license.workspace = true

[lints]
workspace = true

[dependencies]
futures = "0.3.30"
futures-timer = "3.0.2"
gum = { package = "tracing-gum", path = "../gum", version = "13.0.0" }

metered = { package = "prioritized-metered-channel", version = "0.6.1", default-features = false, features = ["futures_channel"] }
sc-service = { version = "0.41.0", path = "../../../substrate/client/service" }
sc-cli = { version = "0.42.0", path = "../../../substrate/client/cli" }
substrate-prometheus-endpoint = { version = "0.17.0", path = "../../../substrate/utils/prometheus" }
sc-tracing = { version = "34.0.0", path = "../../../substrate/client/tracing" }
codec = { package = "parity-scale-codec", version = "3.6.1" }
primitives = { package = "polkadot-primitives", path = "../../primitives", version = "13.0.0" }
bs58 = { version = "0.5.0", features = ["alloc"] }
log = { workspace = true, default-features = true }

[dev-dependencies]
assert_cmd = "2.0.4"
tempfile = "3.2.0"
hyper = { version = "0.14.20", default-features = false, features = ["http1", "tcp"] }
tokio = "1.37"
polkadot-test-service = { path = "../test/service", features = ["runtime-metrics"] }
substrate-test-utils = { path = "../../../substrate/test-utils" }
sc-service = { path = "../../../substrate/client/service" }
sp-keyring = { path = "../../../substrate/primitives/keyring" }
prometheus-parse = { version = "0.2.2" }

[features]
default = []
runtime-metrics = []
runtime-benchmarks = [
	"primitives/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
]
