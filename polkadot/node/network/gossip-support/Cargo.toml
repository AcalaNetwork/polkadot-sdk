[package]
name = "polkadot-gossip-support"
version = "7.0.0"
description = "Polkadot Gossip Support subsystem. Responsible for keeping track of session changes and issuing a connection request to the relevant validators on every new session."
authors.workspace = true
edition.workspace = true
license.workspace = true

[lints]
workspace = true

[dependencies]
sp-application-crypto = { workspace = true, default-features = true }
sp-keystore = { workspace = true, default-features = true }
sp-core = { workspace = true, default-features = true }
sp-crypto-hashing = { workspace = true, default-features = true }
sc-network = { workspace = true, default-features = true }
sc-network-common = { workspace = true, default-features = true }

polkadot-node-network-protocol = { workspace = true, default-features = true }
polkadot-node-subsystem = { workspace = true, default-features = true }
polkadot-node-subsystem-util = { workspace = true, default-features = true }
polkadot-primitives = { workspace = true, default-features = true }

futures = { workspace = true }
futures-timer = { workspace = true }
rand = { workspace = true }
rand_chacha = { workspace = true }
gum = { workspace = true, default-features = true }

[dev-dependencies]
sp-keyring = { workspace = true, default-features = true }
sp-consensus-babe = { workspace = true, default-features = true }
sp-tracing = { workspace = true, default-features = true }
sp-authority-discovery = { workspace = true, default-features = true }

polkadot-node-subsystem-test-helpers = { workspace = true }

assert_matches = { workspace = true }
async-trait = { workspace = true }
parking_lot = { workspace = true, default-features = true }
lazy_static = { workspace = true }
quickcheck = { workspace = true, default-features = true }

[features]
runtime-benchmarks = [
	"gum/runtime-benchmarks",
	"polkadot-node-network-protocol/runtime-benchmarks",
	"polkadot-node-subsystem-test-helpers/runtime-benchmarks",
	"polkadot-node-subsystem-util/runtime-benchmarks",
	"polkadot-primitives/runtime-benchmarks",
	"sc-network/runtime-benchmarks",
	"sc-network-common/runtime-benchmarks",
	"sp-authority-discovery/runtime-benchmarks",
	"sp-consensus-babe/runtime-benchmarks",
	"sp-keyring/runtime-benchmarks",
	"polkadot-node-subsystem/runtime-benchmarks",
	"sp-application-crypto/runtime-benchmarks",
	"sp-core/runtime-benchmarks",
	"sp-keystore/runtime-benchmarks"
]
std = [
	"gum/std",
	"polkadot-node-network-protocol/std",
	"polkadot-node-subsystem-test-helpers/std",
	"polkadot-node-subsystem-util/std",
	"sc-network/std",
	"sc-network-common/std",
	"rand/std",
	"rand_chacha/std",
	"polkadot-node-subsystem/std"
]
try-runtime = [
	"gum/try-runtime",
	"polkadot-node-network-protocol/try-runtime",
	"polkadot-node-subsystem/try-runtime",
	"polkadot-node-subsystem-test-helpers/try-runtime",
	"polkadot-node-subsystem-util/try-runtime",
	"polkadot-primitives/try-runtime",
	"sc-network/try-runtime",
	"sc-network-common/try-runtime",
	"sp-authority-discovery/try-runtime",
	"sp-consensus-babe/try-runtime",
	"sp-keyring/try-runtime",
	"sp-application-crypto/try-runtime",
	"sp-core/try-runtime",
	"sp-keystore/try-runtime"
]
