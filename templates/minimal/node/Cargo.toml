[package]
name = "minimal-template-node"
description = "A minimal Substrate-based Substrate node, ready for hacking."
version = "0.0.0"
license = "Unlicense"
authors.workspace = true
homepage.workspace = true
repository.workspace = true
edition.workspace = true
publish = false
build = "build.rs"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
docify = { workspace = true }
clap = { features = ["derive"], workspace = true }
futures = { features = ["thread-pool"], workspace = true }
futures-timer = { workspace = true }
jsonrpsee = { features = ["server"], workspace = true }
serde_json = { workspace = true, default-features = true }

sc-cli = { workspace = true, default-features = true }
sc-executor = { workspace = true, default-features = true }
sc-network = { workspace = true, default-features = true }
sc-service = { workspace = true, default-features = true }
sc-telemetry = { workspace = true, default-features = true }
sc-transaction-pool = { workspace = true, default-features = true }
sc-transaction-pool-api = { workspace = true, default-features = true }
sc-consensus = { workspace = true, default-features = true }
sc-consensus-manual-seal = { workspace = true, default-features = true }
sc-rpc-api = { workspace = true, default-features = true }
sc-basic-authorship = { workspace = true, default-features = true }
sc-offchain = { workspace = true, default-features = true }
sc-client-api = { workspace = true, default-features = true }

sp-timestamp = { workspace = true, default-features = true }
sp-keyring = { workspace = true, default-features = true }
sp-api = { workspace = true, default-features = true }
sp-blockchain = { workspace = true, default-features = true }
sp-block-builder = { workspace = true, default-features = true }
sp-io = { workspace = true, default-features = true }
sp-runtime = { workspace = true, default-features = true }

substrate-frame-rpc-system = { workspace = true, default-features = true }

# Once the native runtime is gone, there should be little to no dependency on FRAME here, and
# certainly no dependency on the runtime.
frame = { features = [
	"experimental",
	"runtime",
], workspace = true, default-features = true }
minimal-template-runtime = { workspace = true }

[build-dependencies]
substrate-build-script-utils = { workspace = true, default-features = true }

[features]
default = []
try-runtime = [
	"sc-client-api/try-runtime",
	"sc-basic-authorship/try-runtime",
	"sc-cli/try-runtime",
	"sc-consensus/try-runtime",
	"sc-consensus-manual-seal/try-runtime",
	"sc-executor/try-runtime",
	"sc-network/try-runtime",
	"sc-offchain/try-runtime",
	"sc-rpc-api/try-runtime",
	"sc-service/try-runtime",
	"sc-transaction-pool/try-runtime",
	"sc-transaction-pool-api/try-runtime",
	"frame/try-runtime",
	"sp-api/try-runtime",
	"sp-block-builder/try-runtime",
	"sp-blockchain/try-runtime",
	"sp-keyring/try-runtime",
	"sp-runtime/try-runtime",
	"sp-timestamp/try-runtime",
	"substrate-frame-rpc-system/try-runtime",
	"minimal-template-runtime/try-runtime",
	"sc-telemetry/try-runtime",
	"sp-io/try-runtime"
]
runtime-benchmarks = [
	"sc-client-api/runtime-benchmarks",
	"sc-basic-authorship/runtime-benchmarks",
	"sc-cli/runtime-benchmarks",
	"sc-consensus/runtime-benchmarks",
	"sc-consensus-manual-seal/runtime-benchmarks",
	"sc-executor/runtime-benchmarks",
	"sc-network/runtime-benchmarks",
	"sc-offchain/runtime-benchmarks",
	"sc-rpc-api/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"sc-transaction-pool/runtime-benchmarks",
	"sc-transaction-pool-api/runtime-benchmarks",
	"frame/runtime-benchmarks",
	"sp-api/runtime-benchmarks",
	"sp-block-builder/runtime-benchmarks",
	"sp-blockchain/runtime-benchmarks",
	"sp-keyring/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"sp-timestamp/runtime-benchmarks",
	"substrate-frame-rpc-system/runtime-benchmarks",
	"minimal-template-runtime/runtime-benchmarks",
	"sc-telemetry/runtime-benchmarks",
	"sp-io/runtime-benchmarks"
]
std = [
	"sc-client-api/std",
	"sc-basic-authorship/std",
	"sc-cli/std",
	"sc-consensus/std",
	"sc-consensus-manual-seal/std",
	"sc-network/std",
	"sc-offchain/std",
	"sc-rpc-api/std",
	"sc-service/std",
	"sc-telemetry/std",
	"sc-transaction-pool/std",
	"sc-transaction-pool-api/std",
	"sp-blockchain/std",
	"substrate-frame-rpc-system/std"
]
