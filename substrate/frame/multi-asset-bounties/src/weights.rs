// This file is part of Substrate.

// Copyright (C) Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file is part of Substrate.

// Copyright (C) Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `pallet_multi_asset_bounties`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 32.0.0
//! DATE: 2025-07-23, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `123e9506d54d`, CPU: `Intel(R) Xeon(R) CPU @ 2.60GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --extrinsic=*
// --runtime=target/production/wbuild/kitchensink-runtime/kitchensink_runtime.wasm
// --pallet=pallet_multi_asset_bounties
// --header=/__w/polkadot-sdk/polkadot-sdk/substrate/HEADER-APACHE2
// --output=/__w/polkadot-sdk/polkadot-sdk/substrate/frame/multi-asset-bounties/src/weights.rs
// --wasm-execution=compiled
// --steps=50
// --repeat=20
// --heap-pages=4096
// --template=substrate/.maintain/frame-weight-template.hbs
// --no-storage-info
// --no-min-squares
// --no-median-slopes
// --exclude-pallets=pallet_xcm,pallet_xcm_benchmarks::fungible,pallet_xcm_benchmarks::generic,pallet_nomination_pools,pallet_remark,pallet_transaction_storage

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]
#![allow(dead_code)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_multi_asset_bounties`.
pub trait WeightInfo {
	fn fund_bounty(d: u32, ) -> Weight;
	fn fund_child_bounty(d: u32, ) -> Weight;
	fn propose_curator_parent_bounty() -> Weight;
	fn propose_curator_child_bounty() -> Weight;
	fn accept_curator() -> Weight;
	fn unassign_curator() -> Weight;
	fn award_bounty() -> Weight;
	fn close_parent_bounty() -> Weight;
	fn close_child_bounty() -> Weight;
	fn check_status_funding() -> Weight;
	fn check_status_refund() -> Weight;
	fn check_status_payout() -> Weight;
	fn retry_payment_funding() -> Weight;
	fn retry_payment_refund() -> Weight;
	fn retry_payment_payout() -> Weight;
}

/// Weights for `pallet_multi_asset_bounties` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::BountyCount` (r:1 w:1)
	/// Proof: `MultiAssetBounties::BountyCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::BountyDescriptions` (r:0 w:1)
	/// Proof: `MultiAssetBounties::BountyDescriptions` (`max_values`: None, `max_size`: Some(314), added: 2789, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::Bounties` (r:0 w:1)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// The range of component `d` is `[0, 300]`.
	fn fund_bounty(d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `711`
		//  Estimated: `6208`
		// Minimum execution time: 68_051_000 picoseconds.
		Weight::from_parts(71_593_275, 6208)
			// Standard Error: 657
			.saturating_add(Weight::from_parts(260, 0).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesValuePerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesValuePerParent` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::TotalChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::TotalChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountyDescriptions` (r:0 w:1)
	/// Proof: `MultiAssetBounties::ChildBountyDescriptions` (`max_values`: None, `max_size`: Some(326), added: 2801, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:0 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// The range of component `d` is `[0, 300]`.
	fn fund_child_bounty(_d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `838`
		//  Estimated: `6208`
		// Minimum execution time: 78_270_000 picoseconds.
		Weight::from_parts(81_970_968, 6208)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	fn propose_curator_parent_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `418`
		//  Estimated: `3580`
		// Minimum execution time: 23_152_000 picoseconds.
		Weight::from_parts(23_937_000, 3580)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	fn propose_curator_child_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `532`
		//  Estimated: `3591`
		// Minimum execution time: 23_747_000 picoseconds.
		Weight::from_parts(24_387_000, 3591)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn accept_curator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `877`
		//  Estimated: `3593`
		// Minimum execution time: 45_212_000 picoseconds.
		Weight::from_parts(47_070_000, 3593)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn unassign_curator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `739`
		//  Estimated: `3593`
		// Minimum execution time: 49_566_000 picoseconds.
		Weight::from_parts(51_156_000, 3593)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn award_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1147`
		//  Estimated: `6208`
		// Minimum execution time: 76_080_000 picoseconds.
		Weight::from_parts(77_744_000, 6208)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:0)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn close_parent_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `874`
		//  Estimated: `6208`
		// Minimum execution time: 68_584_000 picoseconds.
		Weight::from_parts(70_265_000, 6208)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn close_child_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1133`
		//  Estimated: `6208`
		// Minimum execution time: 72_117_000 picoseconds.
		Weight::from_parts(75_275_000, 6208)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	fn check_status_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `566`
		//  Estimated: `3591`
		// Minimum execution time: 23_510_000 picoseconds.
		Weight::from_parts(24_313_000, 3591)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesValuePerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesValuePerParent` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountyDescriptions` (r:0 w:1)
	/// Proof: `MultiAssetBounties::ChildBountyDescriptions` (`max_values`: None, `max_size`: Some(326), added: 2801, mode: `MaxEncodedLen`)
	fn check_status_refund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `759`
		//  Estimated: `3593`
		// Minimum execution time: 45_947_000 picoseconds.
		Weight::from_parts(47_393_000, 3593)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountyDescriptions` (r:0 w:1)
	/// Proof: `MultiAssetBounties::ChildBountyDescriptions` (`max_values`: None, `max_size`: Some(326), added: 2801, mode: `MaxEncodedLen`)
	fn check_status_payout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `775`
		//  Estimated: `3593`
		// Minimum execution time: 43_120_000 picoseconds.
		Weight::from_parts(44_105_000, 3593)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	fn retry_payment_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1031`
		//  Estimated: `6208`
		// Minimum execution time: 64_073_000 picoseconds.
		Weight::from_parts(65_604_000, 6208)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn retry_payment_refund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1135`
		//  Estimated: `6208`
		// Minimum execution time: 69_914_000 picoseconds.
		Weight::from_parts(72_556_000, 6208)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn retry_payment_payout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1180`
		//  Estimated: `6208`
		// Minimum execution time: 74_017_000 picoseconds.
		Weight::from_parts(76_523_000, 6208)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::BountyCount` (r:1 w:1)
	/// Proof: `MultiAssetBounties::BountyCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::BountyDescriptions` (r:0 w:1)
	/// Proof: `MultiAssetBounties::BountyDescriptions` (`max_values`: None, `max_size`: Some(314), added: 2789, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::Bounties` (r:0 w:1)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// The range of component `d` is `[0, 300]`.
	fn fund_bounty(d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `711`
		//  Estimated: `6208`
		// Minimum execution time: 68_051_000 picoseconds.
		Weight::from_parts(71_593_275, 6208)
			// Standard Error: 657
			.saturating_add(Weight::from_parts(260, 0).saturating_mul(d.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesValuePerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesValuePerParent` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::TotalChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::TotalChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountyDescriptions` (r:0 w:1)
	/// Proof: `MultiAssetBounties::ChildBountyDescriptions` (`max_values`: None, `max_size`: Some(326), added: 2801, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:0 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// The range of component `d` is `[0, 300]`.
	fn fund_child_bounty(_d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `838`
		//  Estimated: `6208`
		// Minimum execution time: 78_270_000 picoseconds.
		Weight::from_parts(81_970_968, 6208)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	fn propose_curator_parent_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `418`
		//  Estimated: `3580`
		// Minimum execution time: 23_152_000 picoseconds.
		Weight::from_parts(23_937_000, 3580)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	fn propose_curator_child_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `532`
		//  Estimated: `3591`
		// Minimum execution time: 23_747_000 picoseconds.
		Weight::from_parts(24_387_000, 3591)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn accept_curator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `877`
		//  Estimated: `3593`
		// Minimum execution time: 45_212_000 picoseconds.
		Weight::from_parts(47_070_000, 3593)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn unassign_curator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `739`
		//  Estimated: `3593`
		// Minimum execution time: 49_566_000 picoseconds.
		Weight::from_parts(51_156_000, 3593)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn award_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1147`
		//  Estimated: `6208`
		// Minimum execution time: 76_080_000 picoseconds.
		Weight::from_parts(77_744_000, 6208)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:0)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn close_parent_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `874`
		//  Estimated: `6208`
		// Minimum execution time: 68_584_000 picoseconds.
		Weight::from_parts(70_265_000, 6208)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn close_child_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1133`
		//  Estimated: `6208`
		// Minimum execution time: 72_117_000 picoseconds.
		Weight::from_parts(75_275_000, 6208)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	fn check_status_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `566`
		//  Estimated: `3591`
		// Minimum execution time: 23_510_000 picoseconds.
		Weight::from_parts(24_313_000, 3591)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesValuePerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesValuePerParent` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountyDescriptions` (r:0 w:1)
	/// Proof: `MultiAssetBounties::ChildBountyDescriptions` (`max_values`: None, `max_size`: Some(326), added: 2801, mode: `MaxEncodedLen`)
	fn check_status_refund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `759`
		//  Estimated: `3593`
		// Minimum execution time: 45_947_000 picoseconds.
		Weight::from_parts(47_393_000, 3593)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountyDescriptions` (r:0 w:1)
	/// Proof: `MultiAssetBounties::ChildBountyDescriptions` (`max_values`: None, `max_size`: Some(326), added: 2801, mode: `MaxEncodedLen`)
	fn check_status_payout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `775`
		//  Estimated: `3593`
		// Minimum execution time: 43_120_000 picoseconds.
		Weight::from_parts(44_105_000, 3593)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	fn retry_payment_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1031`
		//  Estimated: `6208`
		// Minimum execution time: 64_073_000 picoseconds.
		Weight::from_parts(65_604_000, 6208)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn retry_payment_refund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1135`
		//  Estimated: `6208`
		// Minimum execution time: 69_914_000 picoseconds.
		Weight::from_parts(72_556_000, 6208)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(115), added: 2590, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(126), added: 2601, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn retry_payment_payout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1180`
		//  Estimated: `6208`
		// Minimum execution time: 74_017_000 picoseconds.
		Weight::from_parts(76_523_000, 6208)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
}
