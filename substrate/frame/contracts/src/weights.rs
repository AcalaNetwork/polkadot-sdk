// This file is part of Substrate.

// Copyright (C) Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `pallet_contracts`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 32.0.0
//! DATE: 2024-04-11, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `runner-anb7yjbi-project-674-concurrent-0`, CPU: `Intel(R) Xeon(R) CPU @ 2.60GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// target/production/substrate-node
// benchmark
// pallet
// --steps=50
// --repeat=20
// --extrinsic=*
// --wasm-execution=compiled
// --heap-pages=4096
// --json-file=/builds/parity/mirrors/polkadot-sdk/.git/.artifacts/bench.json
// --pallet=pallet_contracts
// --chain=dev
// --header=./substrate/HEADER-APACHE2
// --output=./substrate/frame/contracts/src/weights.rs
// --template=./substrate/.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_contracts`.
pub trait WeightInfo {
	fn on_process_deletion_queue_batch() -> Weight;
	fn on_initialize_per_trie_key(k: u32, ) -> Weight;
	fn v9_migration_step(c: u32, ) -> Weight;
	fn v10_migration_step() -> Weight;
	fn v11_migration_step(k: u32, ) -> Weight;
	fn v12_migration_step(c: u32, ) -> Weight;
	fn v13_migration_step() -> Weight;
	fn v14_migration_step() -> Weight;
	fn v15_migration_step() -> Weight;
	fn v16_migration_step() -> Weight;
	fn migration_noop() -> Weight;
	fn migrate() -> Weight;
	fn on_runtime_upgrade_noop() -> Weight;
	fn on_runtime_upgrade_in_progress() -> Weight;
	fn on_runtime_upgrade() -> Weight;
	fn call_with_code_per_byte(c: u32, ) -> Weight;
	fn instantiate_with_code(c: u32, i: u32, s: u32, ) -> Weight;
	fn instantiate(i: u32, s: u32, ) -> Weight;
	fn call() -> Weight;
	fn upload_code_determinism_enforced(c: u32, ) -> Weight;
	fn upload_code_determinism_relaxed(c: u32, ) -> Weight;
	fn remove_code() -> Weight;
	fn set_code() -> Weight;
	fn seal_caller(r: u32, ) -> Weight;
	fn seal_is_contract(r: u32, ) -> Weight;
	fn seal_code_hash(r: u32, ) -> Weight;
	fn seal_own_code_hash(r: u32, ) -> Weight;
	fn seal_caller_is_origin(r: u32, ) -> Weight;
	fn seal_caller_is_root(r: u32, ) -> Weight;
	fn seal_address(r: u32, ) -> Weight;
	fn seal_gas_left(r: u32, ) -> Weight;
	fn seal_balance(r: u32, ) -> Weight;
	fn seal_value_transferred(r: u32, ) -> Weight;
	fn seal_minimum_balance(r: u32, ) -> Weight;
	fn seal_block_number(r: u32, ) -> Weight;
	fn seal_now(r: u32, ) -> Weight;
	fn seal_weight_to_fee(r: u32, ) -> Weight;
	fn seal_input(r: u32, ) -> Weight;
	fn seal_input_per_byte(n: u32, ) -> Weight;
	fn seal_return(r: u32, ) -> Weight;
	fn seal_return_per_byte(n: u32, ) -> Weight;
	fn seal_terminate(r: u32, ) -> Weight;
	fn seal_random(r: u32, ) -> Weight;
	fn seal_deposit_event(r: u32, ) -> Weight;
	fn seal_deposit_event_per_topic_and_byte(t: u32, n: u32, ) -> Weight;
	fn seal_debug_message(r: u32, ) -> Weight;
	fn seal_debug_message_per_byte(i: u32, ) -> Weight;
	fn seal_set_storage(r: u32, ) -> Weight;
	fn seal_set_storage_per_new_byte(n: u32, ) -> Weight;
	fn seal_set_storage_per_old_byte(n: u32, ) -> Weight;
	fn seal_clear_storage(r: u32, ) -> Weight;
	fn seal_clear_storage_per_byte(n: u32, ) -> Weight;
	fn seal_get_storage(r: u32, ) -> Weight;
	fn seal_get_storage_per_byte(n: u32, ) -> Weight;
	fn seal_contains_storage(r: u32, ) -> Weight;
	fn seal_contains_storage_per_byte(n: u32, ) -> Weight;
	fn seal_take_storage(r: u32, ) -> Weight;
	fn seal_take_storage_per_byte(n: u32, ) -> Weight;
	fn seal_transfer(r: u32, ) -> Weight;
	fn seal_call(r: u32, ) -> Weight;
	fn seal_delegate_call(r: u32, ) -> Weight;
	fn seal_call_per_transfer_clone_byte(t: u32, c: u32, ) -> Weight;
	fn seal_instantiate(r: u32, ) -> Weight;
	fn seal_instantiate_per_transfer_input_salt_byte(t: u32, i: u32, s: u32, ) -> Weight;
	fn seal_hash_sha2_256(r: u32, ) -> Weight;
	fn seal_hash_sha2_256_per_byte(n: u32, ) -> Weight;
	fn seal_hash_keccak_256(r: u32, ) -> Weight;
	fn seal_hash_keccak_256_per_byte(n: u32, ) -> Weight;
	fn seal_hash_blake2_256(r: u32, ) -> Weight;
	fn seal_hash_blake2_256_per_byte(n: u32, ) -> Weight;
	fn seal_hash_blake2_128(r: u32, ) -> Weight;
	fn seal_hash_blake2_128_per_byte(n: u32, ) -> Weight;
	fn seal_sr25519_verify_per_byte(n: u32, ) -> Weight;
	fn seal_sr25519_verify(r: u32, ) -> Weight;
	fn seal_ecdsa_recover(r: u32, ) -> Weight;
	fn seal_ecdsa_to_eth_address(r: u32, ) -> Weight;
	fn seal_set_code_hash(r: u32, ) -> Weight;
	fn lock_delegate_dependency(r: u32, ) -> Weight;
	fn unlock_delegate_dependency(r: u32, ) -> Weight;
	fn seal_reentrance_count(r: u32, ) -> Weight;
	fn seal_account_reentrance_count(r: u32, ) -> Weight;
	fn seal_instantiation_nonce(r: u32, ) -> Weight;
	fn instr_i64_load_store(r: u32, ) -> Weight;
}

/// Weights for `pallet_contracts` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Contracts::DeletionQueueCounter` (r:1 w:0)
	/// Proof: `Contracts::DeletionQueueCounter` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	fn on_process_deletion_queue_batch() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `1627`
		// Minimum execution time: 2_085_000 picoseconds.
		Weight::from_parts(2_140_000, 1627)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `k` is `[0, 1024]`.
	fn on_initialize_per_trie_key(k: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `452 + k * (69 ±0)`
		//  Estimated: `442 + k * (70 ±0)`
		// Minimum execution time: 12_436_000 picoseconds.
		Weight::from_parts(12_816_000, 442)
			// Standard Error: 1_230
			.saturating_add(Weight::from_parts(1_227_014, 0).saturating_mul(k.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(k.into())))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(k.into())))
			.saturating_add(Weight::from_parts(0, 70).saturating_mul(k.into()))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:2 w:1)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:2 w:1)
	/// The range of component `c` is `[0, 125952]`.
	fn v9_migration_step(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `211 + c * (1 ±0)`
		//  Estimated: `6149 + c * (1 ±0)`
		// Minimum execution time: 8_512_000 picoseconds.
		Weight::from_parts(8_771_649, 6149)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(1_185, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(c.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	fn v10_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `510`
		//  Estimated: `6450`
		// Minimum execution time: 16_960_000 picoseconds.
		Weight::from_parts(17_810_000, 6450)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::DeletionQueue` (r:1 w:1025)
	/// Proof: `Contracts::DeletionQueue` (`max_values`: None, `max_size`: Some(142), added: 2617, mode: `Measured`)
	/// Storage: `Contracts::DeletionQueueCounter` (r:0 w:1)
	/// Proof: `Contracts::DeletionQueueCounter` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// The range of component `k` is `[0, 1024]`.
	fn v11_migration_step(k: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `171 + k * (1 ±0)`
		//  Estimated: `3635 + k * (1 ±0)`
		// Minimum execution time: 3_465_000 picoseconds.
		Weight::from_parts(3_566_000, 3635)
			// Standard Error: 1_611
			.saturating_add(Weight::from_parts(1_212_145, 0).saturating_mul(k.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(k.into())))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(k.into()))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553053f13fd319a03c211337c76e0fe776df` (r:2 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553053f13fd319a03c211337c76e0fe776df` (r:2 w:0)
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:1 w:1)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:1 w:1)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:0 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn v12_migration_step(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `328 + c * (1 ±0)`
		//  Estimated: `6266 + c * (1 ±0)`
		// Minimum execution time: 21_347_000 picoseconds.
		Weight::from_parts(21_218_888, 6266)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(416, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(c.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	fn v13_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `440`
		//  Estimated: `6380`
		// Minimum execution time: 12_876_000 picoseconds.
		Weight::from_parts(13_498_000, 6380)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:2 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:0)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	fn v14_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `352`
		//  Estimated: `6292`
		// Minimum execution time: 47_624_000 picoseconds.
		Weight::from_parts(48_794_000, 6292)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	fn v15_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `594`
		//  Estimated: `6534`
		// Minimum execution time: 55_934_000 picoseconds.
		Weight::from_parts(57_894_000, 6534)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	fn v16_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `409`
		//  Estimated: `6349`
		// Minimum execution time: 12_171_000 picoseconds.
		Weight::from_parts(12_884_000, 6349)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:1)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	fn migration_noop() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `1627`
		// Minimum execution time: 2_540_000 picoseconds.
		Weight::from_parts(2_644_000, 1627)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:1)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:1)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:1)
	fn migrate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `166`
		//  Estimated: `3631`
		// Minimum execution time: 12_121_000 picoseconds.
		Weight::from_parts(12_663_000, 3631)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	fn on_runtime_upgrade_noop() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3607`
		// Minimum execution time: 4_774_000 picoseconds.
		Weight::from_parts(4_977_000, 3607)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	fn on_runtime_upgrade_in_progress() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `167`
		//  Estimated: `3632`
		// Minimum execution time: 5_858_000 picoseconds.
		Weight::from_parts(6_250_000, 3632)
			.saturating_add(T::DbWeight::get().reads(2_u64))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:1)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	fn on_runtime_upgrade() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3607`
		// Minimum execution time: 6_074_000 picoseconds.
		Weight::from_parts(6_454_000, 3607)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn call_with_code_per_byte(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `804 + c * (1 ±0)`
		//  Estimated: `9217 + c * (1 ±0)`
		// Minimum execution time: 290_547_000 picoseconds.
		Weight::from_parts(323_525_996, 9217)
			// Standard Error: 15
			.saturating_add(Weight::from_parts(2_122, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(c.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:3 w:3)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:1)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate_with_code(c: u32, i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `326`
		//  Estimated: `8740`
		// Minimum execution time: 4_360_132_000 picoseconds.
		Weight::from_parts(644_170_980, 8740)
			// Standard Error: 104
			.saturating_add(Weight::from_parts(53_524, 0).saturating_mul(c.into()))
			// Standard Error: 12
			.saturating_add(Weight::from_parts(1_896, 0).saturating_mul(i.into()))
			// Standard Error: 12
			.saturating_add(Weight::from_parts(1_824, 0).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(14_u64))
			.saturating_add(T::DbWeight::get().writes(10_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:1)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate(i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `563`
		//  Estimated: `8982`
		// Minimum execution time: 2_166_318_000 picoseconds.
		Weight::from_parts(2_186_292_000, 8982)
			// Standard Error: 30
			.saturating_add(Weight::from_parts(1_048, 0).saturating_mul(i.into()))
			// Standard Error: 30
			.saturating_add(Weight::from_parts(816, 0).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn call() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `829`
		//  Estimated: `9244`
		// Minimum execution time: 210_572_000 picoseconds.
		Weight::from_parts(216_676_000, 9244)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1 w:1)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn upload_code_determinism_enforced(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `145`
		//  Estimated: `6085`
		// Minimum execution time: 274_894_000 picoseconds.
		Weight::from_parts(317_740_873, 6085)
			// Standard Error: 51
			.saturating_add(Weight::from_parts(50_865, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1 w:1)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn upload_code_determinism_relaxed(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `145`
		//  Estimated: `6085`
		// Minimum execution time: 290_164_000 picoseconds.
		Weight::from_parts(313_506_138, 6085)
			// Standard Error: 46
			.saturating_add(Weight::from_parts(51_175, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1 w:1)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	fn remove_code() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `315`
		//  Estimated: `3780`
		// Minimum execution time: 45_560_000 picoseconds.
		Weight::from_parts(47_016_000, 3780)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:2 w:2)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:3 w:3)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn set_code() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `552`
		//  Estimated: `8967`
		// Minimum execution time: 34_424_000 picoseconds.
		Weight::from_parts(36_047_000, 8967)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_134_000 picoseconds.
		Weight::from_parts(14_286_849, 0)
			// Standard Error: 355
			.saturating_add(Weight::from_parts(388_402, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:1600 w:0)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_is_contract(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `509 + r * (77 ±0)`
		//  Estimated: `1467 + r * (2552 ±0)`
		// Minimum execution time: 12_161_000 picoseconds.
		Weight::from_parts(12_296_000, 1467)
			// Standard Error: 7_660
			.saturating_add(Weight::from_parts(3_752_524, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2552).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:1600 w:0)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `517 + r * (170 ±0)`
		//  Estimated: `1468 + r * (2645 ±0)`
		// Minimum execution time: 12_421_000 picoseconds.
		Weight::from_parts(12_590_000, 1468)
			// Standard Error: 7_009
			.saturating_add(Weight::from_parts(4_690_003, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2645).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_own_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_812_000 picoseconds.
		Weight::from_parts(16_595_423, 0)
			// Standard Error: 319
			.saturating_add(Weight::from_parts(478_640, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller_is_origin(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_445_000 picoseconds.
		Weight::from_parts(15_909_980, 0)
			// Standard Error: 229
			.saturating_add(Weight::from_parts(181_269, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller_is_root(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_333_000 picoseconds.
		Weight::from_parts(15_495_536, 0)
			// Standard Error: 152
			.saturating_add(Weight::from_parts(160_987, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_address(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_754_000 picoseconds.
		Weight::from_parts(15_742_828, 0)
			// Standard Error: 290
			.saturating_add(Weight::from_parts(385_459, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_gas_left(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_786_000 picoseconds.
		Weight::from_parts(16_988_131, 0)
			// Standard Error: 255
			.saturating_add(Weight::from_parts(422_440, 0).saturating_mul(r.into()))
	}
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_balance(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `140`
		//  Estimated: `3599`
		// Minimum execution time: 12_414_000 picoseconds.
		Weight::from_parts(28_963_777, 3599)
			// Standard Error: 1_753
			.saturating_add(Weight::from_parts(1_771_504, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_value_transferred(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_837_000 picoseconds.
		Weight::from_parts(14_907_225, 0)
			// Standard Error: 228
			.saturating_add(Weight::from_parts(396_219, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_minimum_balance(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_284_000 picoseconds.
		Weight::from_parts(18_597_225, 0)
			// Standard Error: 476
			.saturating_add(Weight::from_parts(386_026, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_block_number(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_271_000 picoseconds.
		Weight::from_parts(15_558_022, 0)
			// Standard Error: 249
			.saturating_add(Weight::from_parts(381_098, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_now(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_177_000 picoseconds.
		Weight::from_parts(17_221_268, 0)
			// Standard Error: 287
			.saturating_add(Weight::from_parts(376_013, 0).saturating_mul(r.into()))
	}
	/// Storage: `TransactionPayment::NextFeeMultiplier` (r:1 w:0)
	/// Proof: `TransactionPayment::NextFeeMultiplier` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_weight_to_fee(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `67`
		//  Estimated: `1552`
		// Minimum execution time: 12_136_000 picoseconds.
		Weight::from_parts(20_845_947, 1552)
			// Standard Error: 589
			.saturating_add(Weight::from_parts(904_680, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_input(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_044_000 picoseconds.
		Weight::from_parts(15_223_638, 0)
			// Standard Error: 385
			.saturating_add(Weight::from_parts(319_163, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_input_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `872`
		//  Estimated: `9287`
		// Minimum execution time: 278_830_000 picoseconds.
		Weight::from_parts(130_589_408, 9287)
			// Standard Error: 17
			.saturating_add(Weight::from_parts(1_441, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// The range of component `r` is `[0, 1]`.
	fn seal_return(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_093_000 picoseconds.
		Weight::from_parts(12_714_028, 0)
			// Standard Error: 38_930
			.saturating_add(Weight::from_parts(3_086_671, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_return_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 15_420_000 picoseconds.
		Weight::from_parts(16_085_671, 0)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(316, 0).saturating_mul(n.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:33 w:33)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::DeletionQueueCounter` (r:1 w:1)
	/// Proof: `Contracts::DeletionQueueCounter` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:4 w:4)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `Contracts::DeletionQueue` (r:0 w:1)
	/// Proof: `Contracts::DeletionQueue` (`max_values`: None, `max_size`: Some(142), added: 2617, mode: `Measured`)
	/// The range of component `r` is `[0, 1]`.
	fn seal_terminate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4805 + r * (2121 ±0)`
		//  Estimated: `13220 + r * (81321 ±0)`
		// Minimum execution time: 312_097_000 picoseconds.
		Weight::from_parts(334_236_075, 13220)
			// Standard Error: 1_496_813
			.saturating_add(Weight::from_parts(271_903_824, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((36_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((41_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 81321).saturating_mul(r.into()))
	}
	/// Storage: `RandomnessCollectiveFlip::RandomMaterial` (r:1 w:0)
	/// Proof: `RandomnessCollectiveFlip::RandomMaterial` (`max_values`: Some(1), `max_size`: Some(2594), added: 3089, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_random(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `1561`
		// Minimum execution time: 12_131_000 picoseconds.
		Weight::from_parts(12_270_286, 1561)
			// Standard Error: 786
			.saturating_add(Weight::from_parts(1_333_081, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_deposit_event(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_397_000 picoseconds.
		Weight::from_parts(20_822_695, 0)
			// Standard Error: 1_522
			.saturating_add(Weight::from_parts(1_931_626, 0).saturating_mul(r.into()))
	}
	/// Storage: `System::EventTopics` (r:4 w:4)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `t` is `[0, 4]`.
	/// The range of component `n` is `[0, 16384]`.
	fn seal_deposit_event_per_topic_and_byte(t: u32, n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `990 + t * (2475 ±0)`
		// Minimum execution time: 29_115_000 picoseconds.
		Weight::from_parts(22_457_813, 990)
			// Standard Error: 26_443
			.saturating_add(Weight::from_parts(2_079_455, 0).saturating_mul(t.into()))
			// Standard Error: 7
			.saturating_add(Weight::from_parts(571, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(t.into())))
			.saturating_add(Weight::from_parts(0, 2475).saturating_mul(t.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_debug_message(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_973_000 picoseconds.
		Weight::from_parts(13_790_468, 0)
			// Standard Error: 222
			.saturating_add(Weight::from_parts(258_905, 0).saturating_mul(r.into()))
	}
	/// The range of component `i` is `[0, 1048576]`.
	fn seal_debug_message_per_byte(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 16_190_000 picoseconds.
		Weight::from_parts(16_489_000, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(1_007, 0).saturating_mul(i.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_set_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 12_347_000 picoseconds.
		Weight::from_parts(12_378_000, 105)
			// Standard Error: 10_320
			.saturating_add(Weight::from_parts(5_900_033, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_set_storage_per_new_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `245`
		//  Estimated: `245`
		// Minimum execution time: 23_880_000 picoseconds.
		Weight::from_parts(24_681_687, 245)
			// Standard Error: 2
			.saturating_add(Weight::from_parts(331, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_set_storage_per_old_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 23_824_000 picoseconds.
		Weight::from_parts(25_606_167, 248)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(72, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_clear_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 12_310_000 picoseconds.
		Weight::from_parts(12_498_000, 105)
			// Standard Error: 9_436
			.saturating_add(Weight::from_parts(5_677_789, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_clear_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 23_698_000 picoseconds.
		Weight::from_parts(25_066_659, 248)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(101, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_get_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 12_552_000 picoseconds.
		Weight::from_parts(12_816_000, 105)
			// Standard Error: 7_571
			.saturating_add(Weight::from_parts(5_321_285, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_get_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 25_097_000 picoseconds.
		Weight::from_parts(27_139_550, 248)
			// Standard Error: 4
			.saturating_add(Weight::from_parts(601, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_contains_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 14_732_000 picoseconds.
		Weight::from_parts(15_157_000, 105)
			// Standard Error: 8_079
			.saturating_add(Weight::from_parts(4_920_894, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_contains_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 21_900_000 picoseconds.
		Weight::from_parts(23_956_296, 248)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(53, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_take_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 12_642_000 picoseconds.
		Weight::from_parts(12_892_000, 105)
			// Standard Error: 11_319
			.saturating_add(Weight::from_parts(6_012_849, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_take_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 24_080_000 picoseconds.
		Weight::from_parts(26_539_435, 248)
			// Standard Error: 4
			.saturating_add(Weight::from_parts(570, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `System::Account` (r:1601 w:1601)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_transfer(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `770`
		//  Estimated: `4221 + r * (2475 ±0)`
		// Minimum execution time: 12_131_000 picoseconds.
		Weight::from_parts(12_283_000, 4221)
			// Standard Error: 29_463
			.saturating_add(Weight::from_parts(33_271_772, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2475).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:800 w:801)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:801 w:801)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_call(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `520 + r * (170 ±0)`
		//  Estimated: `6463 + r * (2646 ±0)`
		// Minimum execution time: 12_415_000 picoseconds.
		Weight::from_parts(12_577_000, 6463)
			// Standard Error: 160_176
			.saturating_add(Weight::from_parts(248_953_731, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2646).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:735 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:735 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:736 w:736)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:0 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_delegate_call(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + r * (527 ±0)`
		//  Estimated: `6447 + r * (2583 ±10)`
		// Minimum execution time: 12_039_000 picoseconds.
		Weight::from_parts(12_251_000, 6447)
			// Standard Error: 177_063
			.saturating_add(Weight::from_parts(251_187_056, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2583).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:2)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `c` is `[0, 1048576]`.
	fn seal_call_per_transfer_clone_byte(t: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `699 + t * (277 ±0)`
		//  Estimated: `6639 + t * (3458 ±0)`
		// Minimum execution time: 222_480_000 picoseconds.
		Weight::from_parts(139_806_727, 6639)
			// Standard Error: 2_423_879
			.saturating_add(Weight::from_parts(33_638_500, 0).saturating_mul(t.into()))
			// Standard Error: 3
			.saturating_add(Weight::from_parts(428, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(t.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(t.into())))
			.saturating_add(Weight::from_parts(0, 3458).saturating_mul(t.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:800 w:800)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:800 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:0)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:800 w:801)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:802 w:802)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:801 w:801)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[1, 800]`.
	fn seal_instantiate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1097 + r * (188 ±0)`
		//  Estimated: `6990 + r * (2664 ±0)`
		// Minimum execution time: 372_894_000 picoseconds.
		Weight::from_parts(377_395_000, 6990)
			// Standard Error: 240_077
			.saturating_add(Weight::from_parts(342_592_337, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().reads((5_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(T::DbWeight::get().writes((4_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2664).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:0)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:2)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `i` is `[0, 983040]`.
	/// The range of component `s` is `[0, 983040]`.
	fn seal_instantiate_per_transfer_input_salt_byte(t: u32, i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `760 + t * (104 ±0)`
		//  Estimated: `6719 + t * (2549 ±1)`
		// Minimum execution time: 1_944_105_000 picoseconds.
		Weight::from_parts(734_306_034, 6719)
			// Standard Error: 12_967_210
			.saturating_add(Weight::from_parts(23_842_717, 0).saturating_mul(t.into()))
			// Standard Error: 20
			.saturating_add(Weight::from_parts(1_316, 0).saturating_mul(i.into()))
			// Standard Error: 20
			.saturating_add(Weight::from_parts(1_400, 0).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t.into())))
			.saturating_add(T::DbWeight::get().writes(7_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(t.into())))
			.saturating_add(Weight::from_parts(0, 2549).saturating_mul(t.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_sha2_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_092_000 picoseconds.
		Weight::from_parts(15_547_614, 0)
			// Standard Error: 283
			.saturating_add(Weight::from_parts(434_785, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_sha2_256_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 15_052_000 picoseconds.
		Weight::from_parts(5_222_981, 0)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(1_088, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_keccak_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_003_000 picoseconds.
		Weight::from_parts(11_681_109, 0)
			// Standard Error: 507
			.saturating_add(Weight::from_parts(846_579, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_keccak_256_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 18_307_000 picoseconds.
		Weight::from_parts(6_124_877, 0)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(3_368, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_blake2_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_053_000 picoseconds.
		Weight::from_parts(18_797_845, 0)
			// Standard Error: 386
			.saturating_add(Weight::from_parts(502_447, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_blake2_256_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 14_820_000 picoseconds.
		Weight::from_parts(5_660_259, 0)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(1_202, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_blake2_128(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_745_000 picoseconds.
		Weight::from_parts(15_197_331, 0)
			// Standard Error: 611
			.saturating_add(Weight::from_parts(513_067, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_blake2_128_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 15_304_000 picoseconds.
		Weight::from_parts(7_076_503, 0)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(1_202, 0).saturating_mul(n.into()))
	}
	/// The range of component `n` is `[0, 125697]`.
	fn seal_sr25519_verify_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 59_364_000 picoseconds.
		Weight::from_parts(61_439_060, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(4_743, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 160]`.
	fn seal_sr25519_verify(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_102_000 picoseconds.
		Weight::from_parts(28_610_791, 0)
			// Standard Error: 7_966
			.saturating_add(Weight::from_parts(41_629_076, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 160]`.
	fn seal_ecdsa_recover(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_346_000 picoseconds.
		Weight::from_parts(35_774_414, 0)
			// Standard Error: 9_721
			.saturating_add(Weight::from_parts(46_147_116, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 160]`.
	fn seal_ecdsa_to_eth_address(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_047_000 picoseconds.
		Weight::from_parts(19_345_175, 0)
			// Standard Error: 4_941
			.saturating_add(Weight::from_parts(12_010_893, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:1536 w:1536)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1535 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1537 w:1537)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_set_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + r * (926 ±0)`
		//  Estimated: `8969 + r * (3047 ±10)`
		// Minimum execution time: 12_494_000 picoseconds.
		Weight::from_parts(12_639_000, 8969)
			// Standard Error: 60_477
			.saturating_add(Weight::from_parts(27_557_747, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 3047).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:32 w:32)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// The range of component `r` is `[0, 32]`.
	fn lock_delegate_dependency(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `274 + r * (78 ±0)`
		//  Estimated: `1265 + r * (2553 ±0)`
		// Minimum execution time: 12_526_000 picoseconds.
		Weight::from_parts(18_257_234, 1265)
			// Standard Error: 11_152
			.saturating_add(Weight::from_parts(5_647_434, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2553).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:32 w:32)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[0, 32]`.
	fn unlock_delegate_dependency(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `275 + r * (78 ±0)`
		//  Estimated: `990 + r * (2568 ±0)`
		// Minimum execution time: 12_272_000 picoseconds.
		Weight::from_parts(19_132_974, 990)
			// Standard Error: 10_711
			.saturating_add(Weight::from_parts(4_708_596, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2568).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_reentrance_count(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `861 + r * (3 ±0)`
		//  Estimated: `9282 + r * (3 ±0)`
		// Minimum execution time: 279_359_000 picoseconds.
		Weight::from_parts(286_340_330, 9282)
			// Standard Error: 360
			.saturating_add(Weight::from_parts(181_405, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(Weight::from_parts(0, 3).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_account_reentrance_count(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_488_000 picoseconds.
		Weight::from_parts(29_200_438, 0)
			// Standard Error: 469
			.saturating_add(Weight::from_parts(309_673, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::Nonce` (r:1 w:0)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_instantiation_nonce(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `219`
		//  Estimated: `1704`
		// Minimum execution time: 12_346_000 picoseconds.
		Weight::from_parts(16_520_211, 1704)
			// Standard Error: 459
			.saturating_add(Weight::from_parts(158_391, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64_load_store(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 957_000 picoseconds.
		Weight::from_parts(718_218, 0)
			// Standard Error: 11
			.saturating_add(Weight::from_parts(6_346, 0).saturating_mul(r.into()))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `Contracts::DeletionQueueCounter` (r:1 w:0)
	/// Proof: `Contracts::DeletionQueueCounter` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	fn on_process_deletion_queue_batch() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `1627`
		// Minimum execution time: 2_085_000 picoseconds.
		Weight::from_parts(2_140_000, 1627)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `k` is `[0, 1024]`.
	fn on_initialize_per_trie_key(k: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `452 + k * (69 ±0)`
		//  Estimated: `442 + k * (70 ±0)`
		// Minimum execution time: 12_436_000 picoseconds.
		Weight::from_parts(12_816_000, 442)
			// Standard Error: 1_230
			.saturating_add(Weight::from_parts(1_227_014, 0).saturating_mul(k.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(k.into())))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(k.into())))
			.saturating_add(Weight::from_parts(0, 70).saturating_mul(k.into()))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:2 w:1)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:2 w:1)
	/// The range of component `c` is `[0, 125952]`.
	fn v9_migration_step(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `211 + c * (1 ±0)`
		//  Estimated: `6149 + c * (1 ±0)`
		// Minimum execution time: 8_512_000 picoseconds.
		Weight::from_parts(8_771_649, 6149)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(1_185, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(c.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	fn v10_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `510`
		//  Estimated: `6450`
		// Minimum execution time: 16_960_000 picoseconds.
		Weight::from_parts(17_810_000, 6450)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::DeletionQueue` (r:1 w:1025)
	/// Proof: `Contracts::DeletionQueue` (`max_values`: None, `max_size`: Some(142), added: 2617, mode: `Measured`)
	/// Storage: `Contracts::DeletionQueueCounter` (r:0 w:1)
	/// Proof: `Contracts::DeletionQueueCounter` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// The range of component `k` is `[0, 1024]`.
	fn v11_migration_step(k: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `171 + k * (1 ±0)`
		//  Estimated: `3635 + k * (1 ±0)`
		// Minimum execution time: 3_465_000 picoseconds.
		Weight::from_parts(3_566_000, 3635)
			// Standard Error: 1_611
			.saturating_add(Weight::from_parts(1_212_145, 0).saturating_mul(k.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(k.into())))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(k.into()))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553053f13fd319a03c211337c76e0fe776df` (r:2 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553053f13fd319a03c211337c76e0fe776df` (r:2 w:0)
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:1 w:1)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:1 w:1)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:0 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn v12_migration_step(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `328 + c * (1 ±0)`
		//  Estimated: `6266 + c * (1 ±0)`
		// Minimum execution time: 21_347_000 picoseconds.
		Weight::from_parts(21_218_888, 6266)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(416, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(c.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	fn v13_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `440`
		//  Estimated: `6380`
		// Minimum execution time: 12_876_000 picoseconds.
		Weight::from_parts(13_498_000, 6380)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:2 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:0)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	fn v14_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `352`
		//  Estimated: `6292`
		// Minimum execution time: 47_624_000 picoseconds.
		Weight::from_parts(48_794_000, 6292)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	fn v15_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `594`
		//  Estimated: `6534`
		// Minimum execution time: 55_934_000 picoseconds.
		Weight::from_parts(57_894_000, 6534)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	fn v16_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `409`
		//  Estimated: `6349`
		// Minimum execution time: 12_171_000 picoseconds.
		Weight::from_parts(12_884_000, 6349)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:1)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	fn migration_noop() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `1627`
		// Minimum execution time: 2_540_000 picoseconds.
		Weight::from_parts(2_644_000, 1627)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:1)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:1)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:1)
	fn migrate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `166`
		//  Estimated: `3631`
		// Minimum execution time: 12_121_000 picoseconds.
		Weight::from_parts(12_663_000, 3631)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	fn on_runtime_upgrade_noop() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3607`
		// Minimum execution time: 4_774_000 picoseconds.
		Weight::from_parts(4_977_000, 3607)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	fn on_runtime_upgrade_in_progress() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `167`
		//  Estimated: `3632`
		// Minimum execution time: 5_858_000 picoseconds.
		Weight::from_parts(6_250_000, 3632)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:1)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	fn on_runtime_upgrade() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3607`
		// Minimum execution time: 6_074_000 picoseconds.
		Weight::from_parts(6_454_000, 3607)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn call_with_code_per_byte(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `804 + c * (1 ±0)`
		//  Estimated: `9217 + c * (1 ±0)`
		// Minimum execution time: 290_547_000 picoseconds.
		Weight::from_parts(323_525_996, 9217)
			// Standard Error: 15
			.saturating_add(Weight::from_parts(2_122, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(c.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:3 w:3)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:1)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate_with_code(c: u32, i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `326`
		//  Estimated: `8740`
		// Minimum execution time: 4_360_132_000 picoseconds.
		Weight::from_parts(644_170_980, 8740)
			// Standard Error: 104
			.saturating_add(Weight::from_parts(53_524, 0).saturating_mul(c.into()))
			// Standard Error: 12
			.saturating_add(Weight::from_parts(1_896, 0).saturating_mul(i.into()))
			// Standard Error: 12
			.saturating_add(Weight::from_parts(1_824, 0).saturating_mul(s.into()))
			.saturating_add(RocksDbWeight::get().reads(14_u64))
			.saturating_add(RocksDbWeight::get().writes(10_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:1)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate(i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `563`
		//  Estimated: `8982`
		// Minimum execution time: 2_166_318_000 picoseconds.
		Weight::from_parts(2_186_292_000, 8982)
			// Standard Error: 30
			.saturating_add(Weight::from_parts(1_048, 0).saturating_mul(i.into()))
			// Standard Error: 30
			.saturating_add(Weight::from_parts(816, 0).saturating_mul(s.into()))
			.saturating_add(RocksDbWeight::get().reads(13_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn call() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `829`
		//  Estimated: `9244`
		// Minimum execution time: 210_572_000 picoseconds.
		Weight::from_parts(216_676_000, 9244)
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1 w:1)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn upload_code_determinism_enforced(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `145`
		//  Estimated: `6085`
		// Minimum execution time: 274_894_000 picoseconds.
		Weight::from_parts(317_740_873, 6085)
			// Standard Error: 51
			.saturating_add(Weight::from_parts(50_865, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1 w:1)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn upload_code_determinism_relaxed(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `145`
		//  Estimated: `6085`
		// Minimum execution time: 290_164_000 picoseconds.
		Weight::from_parts(313_506_138, 6085)
			// Standard Error: 46
			.saturating_add(Weight::from_parts(51_175, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1 w:1)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	fn remove_code() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `315`
		//  Estimated: `3780`
		// Minimum execution time: 45_560_000 picoseconds.
		Weight::from_parts(47_016_000, 3780)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:2 w:2)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:3 w:3)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn set_code() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `552`
		//  Estimated: `8967`
		// Minimum execution time: 34_424_000 picoseconds.
		Weight::from_parts(36_047_000, 8967)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_134_000 picoseconds.
		Weight::from_parts(14_286_849, 0)
			// Standard Error: 355
			.saturating_add(Weight::from_parts(388_402, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:1600 w:0)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_is_contract(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `509 + r * (77 ±0)`
		//  Estimated: `1467 + r * (2552 ±0)`
		// Minimum execution time: 12_161_000 picoseconds.
		Weight::from_parts(12_296_000, 1467)
			// Standard Error: 7_660
			.saturating_add(Weight::from_parts(3_752_524, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2552).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:1600 w:0)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `517 + r * (170 ±0)`
		//  Estimated: `1468 + r * (2645 ±0)`
		// Minimum execution time: 12_421_000 picoseconds.
		Weight::from_parts(12_590_000, 1468)
			// Standard Error: 7_009
			.saturating_add(Weight::from_parts(4_690_003, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2645).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_own_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_812_000 picoseconds.
		Weight::from_parts(16_595_423, 0)
			// Standard Error: 319
			.saturating_add(Weight::from_parts(478_640, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller_is_origin(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_445_000 picoseconds.
		Weight::from_parts(15_909_980, 0)
			// Standard Error: 229
			.saturating_add(Weight::from_parts(181_269, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller_is_root(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_333_000 picoseconds.
		Weight::from_parts(15_495_536, 0)
			// Standard Error: 152
			.saturating_add(Weight::from_parts(160_987, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_address(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_754_000 picoseconds.
		Weight::from_parts(15_742_828, 0)
			// Standard Error: 290
			.saturating_add(Weight::from_parts(385_459, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_gas_left(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_786_000 picoseconds.
		Weight::from_parts(16_988_131, 0)
			// Standard Error: 255
			.saturating_add(Weight::from_parts(422_440, 0).saturating_mul(r.into()))
	}
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_balance(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `140`
		//  Estimated: `3599`
		// Minimum execution time: 12_414_000 picoseconds.
		Weight::from_parts(28_963_777, 3599)
			// Standard Error: 1_753
			.saturating_add(Weight::from_parts(1_771_504, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_value_transferred(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_837_000 picoseconds.
		Weight::from_parts(14_907_225, 0)
			// Standard Error: 228
			.saturating_add(Weight::from_parts(396_219, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_minimum_balance(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_284_000 picoseconds.
		Weight::from_parts(18_597_225, 0)
			// Standard Error: 476
			.saturating_add(Weight::from_parts(386_026, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_block_number(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_271_000 picoseconds.
		Weight::from_parts(15_558_022, 0)
			// Standard Error: 249
			.saturating_add(Weight::from_parts(381_098, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_now(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_177_000 picoseconds.
		Weight::from_parts(17_221_268, 0)
			// Standard Error: 287
			.saturating_add(Weight::from_parts(376_013, 0).saturating_mul(r.into()))
	}
	/// Storage: `TransactionPayment::NextFeeMultiplier` (r:1 w:0)
	/// Proof: `TransactionPayment::NextFeeMultiplier` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_weight_to_fee(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `67`
		//  Estimated: `1552`
		// Minimum execution time: 12_136_000 picoseconds.
		Weight::from_parts(20_845_947, 1552)
			// Standard Error: 589
			.saturating_add(Weight::from_parts(904_680, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_input(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_044_000 picoseconds.
		Weight::from_parts(15_223_638, 0)
			// Standard Error: 385
			.saturating_add(Weight::from_parts(319_163, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_input_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `872`
		//  Estimated: `9287`
		// Minimum execution time: 278_830_000 picoseconds.
		Weight::from_parts(130_589_408, 9287)
			// Standard Error: 17
			.saturating_add(Weight::from_parts(1_441, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// The range of component `r` is `[0, 1]`.
	fn seal_return(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_093_000 picoseconds.
		Weight::from_parts(12_714_028, 0)
			// Standard Error: 38_930
			.saturating_add(Weight::from_parts(3_086_671, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_return_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 15_420_000 picoseconds.
		Weight::from_parts(16_085_671, 0)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(316, 0).saturating_mul(n.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:33 w:33)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::DeletionQueueCounter` (r:1 w:1)
	/// Proof: `Contracts::DeletionQueueCounter` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:4 w:4)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `Contracts::DeletionQueue` (r:0 w:1)
	/// Proof: `Contracts::DeletionQueue` (`max_values`: None, `max_size`: Some(142), added: 2617, mode: `Measured`)
	/// The range of component `r` is `[0, 1]`.
	fn seal_terminate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4805 + r * (2121 ±0)`
		//  Estimated: `13220 + r * (81321 ±0)`
		// Minimum execution time: 312_097_000 picoseconds.
		Weight::from_parts(334_236_075, 13220)
			// Standard Error: 1_496_813
			.saturating_add(Weight::from_parts(271_903_824, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().reads((36_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
			.saturating_add(RocksDbWeight::get().writes((41_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 81321).saturating_mul(r.into()))
	}
	/// Storage: `RandomnessCollectiveFlip::RandomMaterial` (r:1 w:0)
	/// Proof: `RandomnessCollectiveFlip::RandomMaterial` (`max_values`: Some(1), `max_size`: Some(2594), added: 3089, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_random(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `1561`
		// Minimum execution time: 12_131_000 picoseconds.
		Weight::from_parts(12_270_286, 1561)
			// Standard Error: 786
			.saturating_add(Weight::from_parts(1_333_081, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_deposit_event(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_397_000 picoseconds.
		Weight::from_parts(20_822_695, 0)
			// Standard Error: 1_522
			.saturating_add(Weight::from_parts(1_931_626, 0).saturating_mul(r.into()))
	}
	/// Storage: `System::EventTopics` (r:4 w:4)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `t` is `[0, 4]`.
	/// The range of component `n` is `[0, 16384]`.
	fn seal_deposit_event_per_topic_and_byte(t: u32, n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `990 + t * (2475 ±0)`
		// Minimum execution time: 29_115_000 picoseconds.
		Weight::from_parts(22_457_813, 990)
			// Standard Error: 26_443
			.saturating_add(Weight::from_parts(2_079_455, 0).saturating_mul(t.into()))
			// Standard Error: 7
			.saturating_add(Weight::from_parts(571, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(t.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(t.into())))
			.saturating_add(Weight::from_parts(0, 2475).saturating_mul(t.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_debug_message(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_973_000 picoseconds.
		Weight::from_parts(13_790_468, 0)
			// Standard Error: 222
			.saturating_add(Weight::from_parts(258_905, 0).saturating_mul(r.into()))
	}
	/// The range of component `i` is `[0, 1048576]`.
	fn seal_debug_message_per_byte(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 16_190_000 picoseconds.
		Weight::from_parts(16_489_000, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(1_007, 0).saturating_mul(i.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_set_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 12_347_000 picoseconds.
		Weight::from_parts(12_378_000, 105)
			// Standard Error: 10_320
			.saturating_add(Weight::from_parts(5_900_033, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_set_storage_per_new_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `245`
		//  Estimated: `245`
		// Minimum execution time: 23_880_000 picoseconds.
		Weight::from_parts(24_681_687, 245)
			// Standard Error: 2
			.saturating_add(Weight::from_parts(331, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_set_storage_per_old_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 23_824_000 picoseconds.
		Weight::from_parts(25_606_167, 248)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(72, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_clear_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 12_310_000 picoseconds.
		Weight::from_parts(12_498_000, 105)
			// Standard Error: 9_436
			.saturating_add(Weight::from_parts(5_677_789, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_clear_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 23_698_000 picoseconds.
		Weight::from_parts(25_066_659, 248)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(101, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_get_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 12_552_000 picoseconds.
		Weight::from_parts(12_816_000, 105)
			// Standard Error: 7_571
			.saturating_add(Weight::from_parts(5_321_285, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_get_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 25_097_000 picoseconds.
		Weight::from_parts(27_139_550, 248)
			// Standard Error: 4
			.saturating_add(Weight::from_parts(601, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_contains_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 14_732_000 picoseconds.
		Weight::from_parts(15_157_000, 105)
			// Standard Error: 8_079
			.saturating_add(Weight::from_parts(4_920_894, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_contains_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 21_900_000 picoseconds.
		Weight::from_parts(23_956_296, 248)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(53, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_take_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 12_642_000 picoseconds.
		Weight::from_parts(12_892_000, 105)
			// Standard Error: 11_319
			.saturating_add(Weight::from_parts(6_012_849, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_take_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 24_080_000 picoseconds.
		Weight::from_parts(26_539_435, 248)
			// Standard Error: 4
			.saturating_add(Weight::from_parts(570, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `System::Account` (r:1601 w:1601)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_transfer(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `770`
		//  Estimated: `4221 + r * (2475 ±0)`
		// Minimum execution time: 12_131_000 picoseconds.
		Weight::from_parts(12_283_000, 4221)
			// Standard Error: 29_463
			.saturating_add(Weight::from_parts(33_271_772, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2475).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:800 w:801)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:801 w:801)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_call(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `520 + r * (170 ±0)`
		//  Estimated: `6463 + r * (2646 ±0)`
		// Minimum execution time: 12_415_000 picoseconds.
		Weight::from_parts(12_577_000, 6463)
			// Standard Error: 160_176
			.saturating_add(Weight::from_parts(248_953_731, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2646).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:735 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:735 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:736 w:736)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:0 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_delegate_call(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + r * (527 ±0)`
		//  Estimated: `6447 + r * (2583 ±10)`
		// Minimum execution time: 12_039_000 picoseconds.
		Weight::from_parts(12_251_000, 6447)
			// Standard Error: 177_063
			.saturating_add(Weight::from_parts(251_187_056, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((3_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2583).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:2)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `c` is `[0, 1048576]`.
	fn seal_call_per_transfer_clone_byte(t: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `699 + t * (277 ±0)`
		//  Estimated: `6639 + t * (3458 ±0)`
		// Minimum execution time: 222_480_000 picoseconds.
		Weight::from_parts(139_806_727, 6639)
			// Standard Error: 2_423_879
			.saturating_add(Weight::from_parts(33_638_500, 0).saturating_mul(t.into()))
			// Standard Error: 3
			.saturating_add(Weight::from_parts(428, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(t.into())))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(t.into())))
			.saturating_add(Weight::from_parts(0, 3458).saturating_mul(t.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:800 w:800)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:800 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:0)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:800 w:801)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:802 w:802)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:801 w:801)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[1, 800]`.
	fn seal_instantiate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1097 + r * (188 ±0)`
		//  Estimated: `6990 + r * (2664 ±0)`
		// Minimum execution time: 372_894_000 picoseconds.
		Weight::from_parts(377_395_000, 6990)
			// Standard Error: 240_077
			.saturating_add(Weight::from_parts(342_592_337, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().reads((5_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
			.saturating_add(RocksDbWeight::get().writes((4_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2664).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:0)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:2)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `i` is `[0, 983040]`.
	/// The range of component `s` is `[0, 983040]`.
	fn seal_instantiate_per_transfer_input_salt_byte(t: u32, i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `760 + t * (104 ±0)`
		//  Estimated: `6719 + t * (2549 ±1)`
		// Minimum execution time: 1_944_105_000 picoseconds.
		Weight::from_parts(734_306_034, 6719)
			// Standard Error: 12_967_210
			.saturating_add(Weight::from_parts(23_842_717, 0).saturating_mul(t.into()))
			// Standard Error: 20
			.saturating_add(Weight::from_parts(1_316, 0).saturating_mul(i.into()))
			// Standard Error: 20
			.saturating_add(Weight::from_parts(1_400, 0).saturating_mul(s.into()))
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(t.into())))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(t.into())))
			.saturating_add(Weight::from_parts(0, 2549).saturating_mul(t.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_sha2_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_092_000 picoseconds.
		Weight::from_parts(15_547_614, 0)
			// Standard Error: 283
			.saturating_add(Weight::from_parts(434_785, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_sha2_256_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 15_052_000 picoseconds.
		Weight::from_parts(5_222_981, 0)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(1_088, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_keccak_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_003_000 picoseconds.
		Weight::from_parts(11_681_109, 0)
			// Standard Error: 507
			.saturating_add(Weight::from_parts(846_579, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_keccak_256_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 18_307_000 picoseconds.
		Weight::from_parts(6_124_877, 0)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(3_368, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_blake2_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_053_000 picoseconds.
		Weight::from_parts(18_797_845, 0)
			// Standard Error: 386
			.saturating_add(Weight::from_parts(502_447, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_blake2_256_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 14_820_000 picoseconds.
		Weight::from_parts(5_660_259, 0)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(1_202, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_blake2_128(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_745_000 picoseconds.
		Weight::from_parts(15_197_331, 0)
			// Standard Error: 611
			.saturating_add(Weight::from_parts(513_067, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_blake2_128_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 15_304_000 picoseconds.
		Weight::from_parts(7_076_503, 0)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(1_202, 0).saturating_mul(n.into()))
	}
	/// The range of component `n` is `[0, 125697]`.
	fn seal_sr25519_verify_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 59_364_000 picoseconds.
		Weight::from_parts(61_439_060, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(4_743, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 160]`.
	fn seal_sr25519_verify(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_102_000 picoseconds.
		Weight::from_parts(28_610_791, 0)
			// Standard Error: 7_966
			.saturating_add(Weight::from_parts(41_629_076, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 160]`.
	fn seal_ecdsa_recover(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_346_000 picoseconds.
		Weight::from_parts(35_774_414, 0)
			// Standard Error: 9_721
			.saturating_add(Weight::from_parts(46_147_116, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 160]`.
	fn seal_ecdsa_to_eth_address(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_047_000 picoseconds.
		Weight::from_parts(19_345_175, 0)
			// Standard Error: 4_941
			.saturating_add(Weight::from_parts(12_010_893, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:1536 w:1536)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1535 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1537 w:1537)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_set_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + r * (926 ±0)`
		//  Estimated: `8969 + r * (3047 ±10)`
		// Minimum execution time: 12_494_000 picoseconds.
		Weight::from_parts(12_639_000, 8969)
			// Standard Error: 60_477
			.saturating_add(Weight::from_parts(27_557_747, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((3_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 3047).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:32 w:32)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// The range of component `r` is `[0, 32]`.
	fn lock_delegate_dependency(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `274 + r * (78 ±0)`
		//  Estimated: `1265 + r * (2553 ±0)`
		// Minimum execution time: 12_526_000 picoseconds.
		Weight::from_parts(18_257_234, 1265)
			// Standard Error: 11_152
			.saturating_add(Weight::from_parts(5_647_434, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2553).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:32 w:32)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[0, 32]`.
	fn unlock_delegate_dependency(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `275 + r * (78 ±0)`
		//  Estimated: `990 + r * (2568 ±0)`
		// Minimum execution time: 12_272_000 picoseconds.
		Weight::from_parts(19_132_974, 990)
			// Standard Error: 10_711
			.saturating_add(Weight::from_parts(4_708_596, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2568).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_reentrance_count(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `861 + r * (3 ±0)`
		//  Estimated: `9282 + r * (3 ±0)`
		// Minimum execution time: 279_359_000 picoseconds.
		Weight::from_parts(286_340_330, 9282)
			// Standard Error: 360
			.saturating_add(Weight::from_parts(181_405, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
			.saturating_add(Weight::from_parts(0, 3).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_account_reentrance_count(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 12_488_000 picoseconds.
		Weight::from_parts(29_200_438, 0)
			// Standard Error: 469
			.saturating_add(Weight::from_parts(309_673, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::Nonce` (r:1 w:0)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_instantiation_nonce(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `219`
		//  Estimated: `1704`
		// Minimum execution time: 12_346_000 picoseconds.
		Weight::from_parts(16_520_211, 1704)
			// Standard Error: 459
			.saturating_add(Weight::from_parts(158_391, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64_load_store(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 957_000 picoseconds.
		Weight::from_parts(718_218, 0)
			// Standard Error: 11
			.saturating_add(Weight::from_parts(6_346, 0).saturating_mul(r.into()))
	}
}
