[package]
name = "sc-consensus"
version = "0.33.0"
authors.workspace = true
edition.workspace = true
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
homepage.workspace = true
repository.workspace = true
description = "Collection of common consensus specific implementations for Substrate (client)"
readme = "README.md"

[lints]
workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
async-trait = { workspace = true }
futures = { features = ["thread-pool"], workspace = true }
log = { workspace = true, default-features = true }
mockall = { workspace = true }
parking_lot = { workspace = true, default-features = true }
serde = { features = ["derive"], workspace = true, default-features = true }
thiserror = { workspace = true }
prometheus-endpoint = { workspace = true, default-features = true }
sc-client-api = { workspace = true, default-features = true }
sc-network-types = { workspace = true, default-features = true }
sc-utils = { workspace = true, default-features = true }
sp-api = { workspace = true, default-features = true }
sp-blockchain = { workspace = true, default-features = true }
sp-consensus = { workspace = true, default-features = true }
sp-core = { workspace = true, default-features = true }
sp-runtime = { workspace = true, default-features = true }
sp-state-machine = { workspace = true, default-features = true }

[dev-dependencies]
sp-test-primitives = { workspace = true }

[features]
try-runtime = [
	"sc-client-api/try-runtime",
	"sp-api/try-runtime",
	"sp-blockchain/try-runtime",
	"sp-consensus/try-runtime",
	"sp-runtime/try-runtime",
	"sp-state-machine/try-runtime",
	"sp-test-primitives/try-runtime",
	"sp-core/try-runtime"
]
runtime-benchmarks = [
	"sc-client-api/runtime-benchmarks",
	"sp-api/runtime-benchmarks",
	"sp-blockchain/runtime-benchmarks",
	"sp-consensus/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"sp-state-machine/runtime-benchmarks",
	"sp-test-primitives/runtime-benchmarks",
	"sp-core/runtime-benchmarks"
]
std = [
	"sc-client-api/std",
	"sc-network-types/std",
	"sc-utils/std",
	"sp-blockchain/std",
	"sp-consensus/std",
	"prometheus-endpoint/std",
	"log/std"
]
