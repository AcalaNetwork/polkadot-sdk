[package]
name = "sc-authority-discovery"
version = "0.40.0"
authors.workspace = true
edition.workspace = true
build = "build.rs"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
homepage = "https://substrate.io"
repository.workspace = true
description = "Substrate authority discovery. (polkadot v1.12.0)"
readme = "README.md"

[lints]
workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies]
prost-build = "0.12.4"

[dependencies]
codec = { package = "parity-scale-codec", version = "3.6.1", default-features = false }
futures = "0.3.30"
futures-timer = "3.0.1"
ip_network = "0.4.1"
libp2p = { version = "0.51.4", features = ["ed25519", "kad"] }
multihash = { version = "0.17.0", default-features = false, features = ["sha2", "std"] }
linked_hash_set = "0.1.4"
log = { workspace = true, default-features = true }
prost = "0.12.4"
rand = "0.8.5"
thiserror = { workspace = true }
prometheus-endpoint = { package = "substrate-prometheus-endpoint", path = "../../utils/prometheus", version = "0.17.0" }
sc-client-api = { version = "34.0.0", path = "../api" }
sc-network = { version = "0.40.0", path = "../network" }
sc-network-types = { version = "0.10.0", path = "../network/types" }
sp-api = { version = "32.0.0", path = "../../primitives/api" }
sp-authority-discovery = { version = "32.0.0", path = "../../primitives/authority-discovery" }
sp-blockchain = { version = "34.0.0", path = "../../primitives/blockchain" }
sp-core = { version = "33.0.0", path = "../../primitives/core" }
sp-keystore = { version = "0.39.0", path = "../../primitives/keystore" }
sp-runtime = { version = "37.0.0", path = "../../primitives/runtime" }
async-trait = "0.1.79"
multihash-codetable = { version = "0.1.1", features = [
	"digest",
	"serde",
	"sha2",
] }

[dev-dependencies]
quickcheck = { version = "1.0.3", default-features = false }
sp-tracing = { path = "../../primitives/tracing" }
substrate-test-runtime-client = { path = "../../test-utils/runtime/client" }
