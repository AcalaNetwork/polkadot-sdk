[package]
name = "sc-rpc-spec-v2"
version = "0.34.0"
authors.workspace = true
edition.workspace = true
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
homepage.workspace = true
repository.workspace = true
description = "Substrate RPC interface v2."
readme = "README.md"

[lints]
workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
jsonrpsee = { features = ["client-core", "macros", "server-core"], workspace = true }
# Internal chain structures for "chain_spec".
sc-chain-spec = { workspace = true, default-features = true }
# Pool for submitting extrinsics required by "transaction"
sc-transaction-pool-api = { workspace = true, default-features = true }
sp-core = { workspace = true, default-features = true }
sp-runtime = { workspace = true, default-features = true }
sp-api = { workspace = true, default-features = true }
sp-rpc = { workspace = true, default-features = true }
sp-blockchain = { workspace = true, default-features = true }
sp-version = { workspace = true, default-features = true }
sc-client-api = { workspace = true, default-features = true }
sc-utils = { workspace = true, default-features = true }
sc-rpc = { workspace = true, default-features = true }
codec = { workspace = true, default-features = true }
thiserror = { workspace = true }
serde = { workspace = true, default-features = true }
hex = { workspace = true, default-features = true }
futures = { workspace = true }
parking_lot = { workspace = true, default-features = true }
tokio-stream = { features = ["sync"], workspace = true }
tokio = { features = ["sync"], workspace = true, default-features = true }
array-bytes = { workspace = true, default-features = true }
log = { workspace = true, default-features = true }
futures-util = { workspace = true }
rand = { workspace = true, default-features = true }
schnellru = { workspace = true }

[dev-dependencies]
jsonrpsee = { features = ["server", "ws-client"], workspace = true }
serde_json = { workspace = true, default-features = true }
tokio = { features = ["macros"], workspace = true, default-features = true }
substrate-test-runtime-client = { workspace = true }
substrate-test-runtime = { workspace = true }
substrate-test-runtime-transaction-pool = { workspace = true }
sp-consensus = { workspace = true, default-features = true }
sp-externalities = { workspace = true, default-features = true }
sp-maybe-compressed-blob = { workspace = true, default-features = true }
sc-block-builder = { workspace = true, default-features = true }
sc-service = { features = ["test-helpers"], workspace = true, default-features = true }
assert_matches = { workspace = true }
pretty_assertions = { workspace = true }
sc-transaction-pool = { workspace = true, default-features = true }

[features]
try-runtime = [
	"sc-client-api/try-runtime",
	"sc-block-builder/try-runtime",
	"sc-chain-spec/try-runtime",
	"sc-rpc/try-runtime",
	"sc-service/try-runtime",
	"sc-transaction-pool/try-runtime",
	"sc-transaction-pool-api/try-runtime",
	"sp-api/try-runtime",
	"sp-blockchain/try-runtime",
	"sp-consensus/try-runtime",
	"sp-runtime/try-runtime",
	"sp-version/try-runtime",
	"substrate-test-runtime/try-runtime",
	"substrate-test-runtime-client/try-runtime",
	"substrate-test-runtime-transaction-pool/try-runtime",
	"sp-core/try-runtime",
	"sp-rpc/try-runtime"
]
runtime-benchmarks = [
	"sc-client-api/runtime-benchmarks",
	"sc-block-builder/runtime-benchmarks",
	"sc-chain-spec/runtime-benchmarks",
	"sc-rpc/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"sc-transaction-pool/runtime-benchmarks",
	"sc-transaction-pool-api/runtime-benchmarks",
	"sp-api/runtime-benchmarks",
	"sp-blockchain/runtime-benchmarks",
	"sp-consensus/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"sp-version/runtime-benchmarks",
	"substrate-test-runtime/runtime-benchmarks",
	"substrate-test-runtime-client/runtime-benchmarks",
	"substrate-test-runtime-transaction-pool/runtime-benchmarks",
	"sp-core/runtime-benchmarks",
	"sp-rpc/runtime-benchmarks"
]
std = [
	"sc-client-api/std",
	"sc-block-builder/std",
	"sc-chain-spec/std",
	"sc-rpc/std",
	"sc-service/std",
	"sc-transaction-pool/std",
	"sc-transaction-pool-api/std",
	"sc-utils/std",
	"sp-blockchain/std",
	"sp-consensus/std",
	"sp-rpc/std",
	"substrate-test-runtime-client/std",
	"substrate-test-runtime-transaction-pool/std",
	"futures-util/std",
	"log/std"
]
